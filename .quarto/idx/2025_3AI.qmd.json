{"title":"Big Data, Big Problems?","markdown":{"yaml":{"title":"Big Data, Big Problems?","subtitle":"Scalability of Mixed Models for<br>Clustered and Longitudinal Data","author":"Nicole Erler","author-title":"Department of Data Science & Biostatistics","institute":"Julius Center for Health Sciences and Primary Care","date":"13 May 2025","date-format":"long","contact":"[{{< fa solid house-user >}} nerler.com](\"https://nerler.com\") &emsp;&emsp; [{{< fa brands bluesky >}} nerler](https://bsky.app/profile/nerler.bsky.social)&emsp;&emsp; [{{< fa brands github >}} NErler](https://github.com/NErler)","title-slide-attributes":{"data-background-image":"images/wallpaper_blue.jpg","data-background-size":"cover","data-background-opacity":"0.3"},"format":{"revealjs":{"template-partials":["styles/title-slide.html"],"center-title-slide":false,"theme":["styles/mytheme.scss","styles/color-theme-nord.scss","styles/custom_styles.scss"],"width":1244,"height":700,"embed-resources":false,"slide-number":true,"footer":"[{{< fa solid house-user >}} nerler.com](\"https://nerler.com\") &emsp;&emsp;&emsp;&emsp; [{{< fa brands bluesky >}} nerler](https://bsky.app/profile/nerler.bsky.social)&emsp;&emsp;&emsp;&emsp; [{{< fa brands github >}} NErler](https://github.com/NErler)"}},"include-after-body":"styles/title-slide-footer.html","knitr":{"opts_chunk":{"out.width":"100%","fig.width":7,"fig.height":3.5,"fig.align":"center","dpi":600,"dev.args":{"bg":"transparent"},"fontsize":"2em","slide-number":true}},"html-table-processing":"none"},"headingText":"data.frame(x = 1:10, y = rnorm(10)) %>%","containsRefs":false,"markdown":"\n\n```{r packages}\nlibrary(\"kableExtra\")\nlibrary(\"ggplot2\")\nlibrary(\"dplyr\")\nlibrary(\"colorspace\")\n```\n\n\n```{r}\nget_color_theme <- function(file) {\n  str <- readLines(file) %>%\n    gsub(\" *\\\\/\\\\*[[:print:]]*\\\\*\\\\/ *\",  \"\", .) %>%\n    gsub(\"^\\\\$|;$\", \"\", .) %>%\n    gsub(\"-\",\"_\", .) %>%\n    strsplit(., \": \") %>%\n    do.call(rbind, .)\n  \n  s <- as.list(setNames(str[, 2], str[, 1])) %>%\n    list2env(., envir = .GlobalEnv)\n}\n\n\nget_color_theme(\"styles/color-theme-nord.scss\")\n```\n\n```{r}\ntheme_set(theme_minimal())\ntheme_update(\n  panel.grid = element_line(color = nord0),\n  # panel.border = element_rect(fill = 'transparent',\n  #                             color = 'transparent'),\n  panel.background = element_rect(fill = \"transparent\",\n                                  color = \"transparent\"),\n  plot.background = element_rect(fill = theme_bg,\n                                 color = \"transparent\"),\n  strip.background = element_rect(fill = nord1,\n                                  color = nord1),\n  strip.text = element_text(color = nord4,\n                            size = 8,\n                            margin = margin(4, 4, 4, 4)\n                            ),\n  legend.background = element_blank(),\n  legend.key = element_blank(),\n  legend.text = element_text(color = nord4),\n  legend.title = element_text(color = nord4),\n  # axis.line = element_line(color = nord3),\n  axis.text = element_text(color = lighten(nord3, 0.2)),\n  axis.title = element_text(color = lighten(nord3, 0.2))\n)\n\nupdate_geom_defaults(\"point\", list(color = nord6))\n\n#   ggplot(aes(x = x, y = y)) +\n#   geom_point()\n```\n\n```{r}\ndatakbl <- function(x, digits = 1) {\n  kable(x, digits = digits, escape = FALSE, format = \"html\",\n        table.attr = \"class='datatablarge'\") %>%\n    row_spec(which(x$id %% 2 == 1), \n             background = lighten(theme_bg, 0.05))\n}\n```\n\n\n# Motivation {.h1section}\n\n```{r}\n# Motivation: Continuous Monitoring Data\n# - plot with 6 outcomes plotted\n# - info slide with bullets\n# \n# Section: \n```\n\n## My Data: Continuous Monitoring\n\n<img src=\"images/MonitoringDevice.png\" id = \"wearable\" height= 500>\n\n<br>\n\nPatients at the general nursing ward.\n\n<br>\n\nRepeated measurements (every 20 sec) of\n\n* heart rate\n* blood pressure\n* body temperature\n* oxygen saturation\n* respiration\n* ...\n\n\n\n# The Linear Mixed Model{.h1section}\n\n## Data for Mixed Models\n\n::::{.columns}\n\n:::{.column width=60%}\n\nMinimal data structure for a (linear) mixed model:\n\n<br>\n\n::::: {.fragment fragment-index=1}\n\n* \"Clustered\" data<br>\n  &#8680; e.g., patients in different hospitals\n:::::\n\n::::: {.fragment fragment-index=2}\n\n* repeated measurements of the same subjects\n:::::\n:::\n\n:::{.column width=40%}\n```{r}\nset.seed(2025)\ntdat = data.frame(id = rep(1:3, c(4, 2, 3))) %>%\n  mutate(.by = \"id\",\n         y = rgamma(length(id), 2, 1),\n         time = seq_along(id) %>% jitter(factor = 0.8),\n         setting = sample(LETTERS[1:length(id)]),\n         `\\\\(x_1\\\\)` = rbinom(1, size = 1, 0.5),\n         `\\\\(x_2\\\\)` = rnorm(1, 1, 0.5),\n         `\\\\(x_3\\\\)` = sample(LETTERS[1:3], length(id), replace = TRUE)\n  )\n\n```\n\n::::::{.r-stack}\n\n```{r}\noptions(knitr.kable.NA = '\\\\(\\\\vdots\\\\)')\n\ntdat %>%\n  select(id, y) %>%\n  rbind(., rep(NA, 2)) %>%\n  datakbl()\n\n```\n\n::::: {.fragment fragment-index=2 style=\"background-color: #242933;\"}\n\n```{r}\ntdat %>%\n  select(id, y, setting) %>%\n  rbind(., rep(NA, 3)) %>%\n  datakbl()\n```\n:::::\n\n:::::{.fragment style = \"background-color: #242933;\"}\n\n```{r}\ntdat %>%\n  select(id, y, time) %>%\n  rbind(., rep(NA, 3)) %>%\n  datakbl()\n```\n\n:::::\n\n:::::{.fragment style = \"background-color: #242933;\"}\n\n```{r}\ntdat %>%\n  select(id, y, time, `\\\\(x_1\\\\)`, `\\\\(x_2\\\\)`, `\\\\(x_3\\\\)`) %>%\n  rbind(., rep(NA, 3)) %>%\n  datakbl()\n```\n\n:::::\n::::::\n\n:::\n::::\n\n\n\n\n\n\n## Linear Mixed Model\n\n<br>\n\nFor patient $i$ at time $t$:\n\n$$\ny_{i}(t) = \n\\underset{\\text{fixed effects}}{\\underbrace{\\mathbf x_{i}(t)^\\top \\boldsymbol{\\beta}}} + \n\\underset{\\text{random effects}}{\\underbrace{\\mathbf z_{i}(t)^\\top \\mathbf{b_{i}}}} + \n\\varepsilon_i(t)\n$$\n\n$$\\text{with}\\quad \\mathbf b_i \\sim N(\\mathbf 0, \\mathbf D) \\quad\\text{and}\n\\quad \\varepsilon_i(t) \\sim N(0, \\sigma^2)\n$$\n\n:::{.sgrey}\n\n* $\\mathbf x_i(t)^\\top$: vector of covariates\n* $\\mathbf z_i(t)^\\top$: vector of covariates with patient-specific effects\n\n* $\\boldsymbol\\beta$: fixed (population) effects\n* $\\mathbf b_i$: random (patient-specific) effects\n\n* $\\varepsilon_i(t)$: residual error\n\n:::\n\n## Random Intercept & Slope Model\n\n<br>\n\nFor example,\n\n$$y_i(t) = \\underset{\\text{fixed effects}}{\\underbrace{\\beta_0 + \\beta_1 t}} +\n  \\underset{\\text{random effects}}{\\underbrace{b_{i0} + b_{i1} t}} + \\varepsilon_i(t)$$\nwith\n$$\\mathbf b_i = \\begin{bmatrix}\nb_{i0}\\\\b_{i1}\n\\end{bmatrix} \\sim N\\left( \\begin{bmatrix}0\\\\0\\end{bmatrix}, \\begin{bmatrix}d_{11} & d_{12}\\\\d_{21} & d_{22}\\end{bmatrix}\\right)\n$$\n\n\n\n\n## Mixed Models Visualized\n\n```{r}\nlibrary(\"lme4\")\nlibrary(\"survival\")\n\nfit <- lmer(albumin ~ I(day/365) + (I(day/365) | id), data = pbcseq)\n\nids <- c(14, 33, 90)\n\npbcseq$pred = predict(fit)\npbcseq$pred0 = predict(fit, re.form = NA)\n\n\nndf = data.frame(id = ids,\n                 day = sapply(ids, \\(i) max(pbcseq$day[pbcseq$id == i]))) %>%\n  mutate(pred0 = predict(fit, newdata = ., re.form = NA),\n         pred = predict(fit, newdata = .),\n         xpos = day + c(180, 60, 360))\n\nrd = ranef(fit)$id[c(ids), ] %>%\n  tibble::rownames_to_column(\"id\") %>%\n  mutate(\n    beta0 = fixef(fit)[1],\n    ypos = beta0 + `(Intercept)`/2\n  ) %>%\n  merge(., ndf)\n\n\np0 <- pbcseq %>%\n  subset(id %in% c(33, # flat\n                   90, # steep\n                   14 # low\n  ), select = c(\"id\", \"day\", \"albumin\", \"pred\", \"pred0\")) %>%\n  reshape2::melt(id.vars = c(\"id\", \"day\", \"albumin\")) %>%\n  ggplot(aes(x = day, y = albumin)) +\n  facet_wrap(\"id\", nrow = 1,\n             labeller = as_labeller(\n               c(\"14\" = \"patient I\", \"33\" = \"patient II\", \"90\" = \"patient III\"))) +\n  theme(axis.text.y = element_blank(),\n        axis.ticks = element_blank(),\n        legend.position = \"top\") +\n  ylab(\"response y\") +\n  scale_x_continuous(\"time\", labels = \\(x)x/365.25, breaks = seq(0, 5000, 365.25)) +\n  scale_linetype_manual(\n    labels = c(\"fixed effects only\\n(population fit)\",\n               \"fixed and random effects\\n(patient specific fit)\"),\n    breaks = c(\"pred0\", \"pred\"),\n    values = c(2, 1),\n    name = \"\") +\n  scale_color_manual(\"\", \n                     breaks = c(\"pred0\", \"pred\"),\n                     values = c(nord7, nord10),\n                     labels = c(\"fixed effects only\\n(population fit)\",\n                                   \"fixed and random effects\\n(patient specific fit)\")\n  ) +\n  coord_cartesian(xlim = c(-0.5, 9)*365.25)\n\n```\n\n::::{.r-stack}\n```{r}\np0 + \n  geom_point() +\n  geom_line(aes(y = value, linetype = variable, color = variable),\n            lwd = 1, alpha = 0) +\n  theme(legend.text = element_text(color = \"transparent\"))\n```\n\n:::{.fragment}\n```{r}\np0 + \n  geom_point(alpha = 0.7) +\n  geom_line(data = ~subset(., variable == \"pred0\"),\n            aes(y = value, linetype = variable, color = variable),\n            lwd = 1)\n```\n:::\n:::{.fragment}\n```{r}\np0 + \n  geom_point(alpha = 0.7) +\n  geom_line(aes(y = value, linetype = variable, color = variable),\n            lwd = 1)\n```\n:::\n\n::::\n\n\n## Mixed Models Visualized\n\n```{r}\np0 + \n  geom_segment(data = rd[c(1, 3), ], color = nord11,\n               aes(x = 0, xend = 0,\n                   y = beta0, yend =`(Intercept)` + beta0),\n               arrow = arrow(length = unit(5, \"pt\"),\n                             type = \"closed\", ends = \"last\")) +\n  geom_curve(data = subset(rd, pred > pred0),\n             aes(x = day, y = pred0, xend = day, yend = pred),\n             curvature = 0.25, color = nord11,\n             arrow = arrow(length = unit(5, \"pt\"), type = \"closed\", ends = \"last\")) +\n  geom_curve(data = subset(rd, pred <= pred0),\n             aes(x = day, y = pred0, xend = day, yend = pred),\n             curvature = -0.25, color = nord11,\n             arrow = arrow(length = unit(5, \"pt\"),\n                           type = \"closed\", ends = \"last\")) +\n  geom_point(alpha = 0.1) + \n  geom_line(aes(y = value, linetype = variable, color = variable),\n            lwd = 1, alpha = 0.5) +\n  geom_text(data = rd, aes(x = 0, y = ypos), label = expression(b[0]),\n            hjust = 1.2, color = nord11) +\n  geom_text(data = rd, aes(x = xpos, y = (pred + pred0)/2), label = expression(b[1]),\n            hjust = 1, color = nord11)\n\n```\n\n\n\n\n## Example: Non-linear Trajectories\n\n```{r pbc-example-setup}\n#| cache: true\n\ndat <- JointAI::PBC\ndat$time <- dat$day/365.25\ndat$futime <- dat$futime/365.25\ndat$stage <- factor(dat$stage, ordered = FALSE)\ndat$ALP <- dat$alk.phos/1000\n\nlibrary(\"splines\")\n\nfit0 <- lmer(log(bili) ~ ns(time, df = 5, B = c(0, 11)) +\n               (ns(time, df = 5, B = c(0, 11)) | id),\n             data = dat, control = lmerControl(optimizer = \"bobyqa\"))\n\n\n\n# ids to show different patient-specific fit\nids <- c(15, 134, 93, 116, 180, 114)\n\nndf <- expand.grid(time = seq(0, 12, length = 80),\n                   id = ids)\nndf$pred_f <- predict(fit0, newdata = ndf, re.form = ~ 0)\nndf$pred_rd <- predict(fit0, newdata = ndf, re.form = NULL)\n\n```\n\n\n```{r bili-fit-fixed}\nsubset(dat, id %in% ids) %>%\n  ggplot(aes(x = time, y = log(bili))) +\n  geom_point(alpha = 0.5) +\n  facet_wrap(\"id\", labeller = as_labeller(function(x) \n    paste0(\"patient \", x))) +\n  xlab(\"time\") +\n  ylab(\"response, y\") +\n  scale_color_manual(\n    \"\",\n    values = c(nord7, nord10),\n    breaks = c(\"pred_f\", \"pred_rd\"),\n    labels = c(\"fixed effects only\\n(population fit)\",\n               \"fixed and random effects\\n(patient specific fit)\")\n  ) +\n  scale_linetype_manual(\n    labels = c(\"fixed effects only\\n(population fit)\",\n               \"fixed and random effects\\n(patient specific fit)\"),\n    breaks = c(\"pred_f\", \"pred_rd\"),\n    values = c(2, 1),\n    name = \"\") +\n  theme(legend.position = \"top\",\n        # legend.box.spacing = unit(1, units = \"pt\"),\n        # legend.margin = margin(0, 0, 0, 0),\n        axis.text = element_blank(),\n        axis.ticks = element_blank()) +\n  geom_line(data = ndf, aes(y = pred_f, x = time, linetype = 'pred_f',\n                            color = 'pred_f'),\n            linewidth = 1) +\n  geom_line(data = ndf, aes(y = pred_rd, x = time,\n                            linetype = 'pred_rd', color = 'pred_rd'),\n            linewidth = 1)\n\n```\n\n\n# Big Data {background-image=\"images/galaxy.jpg\" background-size=\"fill\" background-color=\"black\" .center .bigdata}\n\n<!-- ## Big Data -->\n\n<!-- <br> -->\n<!-- <br> -->\n\n<!-- > Your data are not large if using the naive [...] approach takes less time than -->\n<!--   finding and reading the documentation that describes how to do what you want -->\n<!--   to do efficiently. -->\n\n<!-- :::{.quoteauthor} -->\n<!-- **Douglas Bates**, author of the **lme4** R-package -->\n<!-- ::: -->\n\n## Scenario 1: Many Clusters (i.e., many patients)\n\n```{r}\nparr = ggplot() +\n  annotate(\"segment\", x = 0, xend = 0, y = 0, yend = 10, color = nord11,\n           linewidth = 1,\n           arrow = arrow(length = unit(5, \"pt\"),\n                 type = \"closed\", ends = \"both\")) +\n  theme_void()\n\nggsave(filename = \"images/arrow.png\", plot = parr, width = 100, height = 500, \n       bg = \"transparent\", units = \"px\")\n\ntemp = select(tdat, !matches(\"setting\"))\ntemp$id = as.character(temp$id)\ntemp$id[7] = \"\\\\(\\\\vdots\\\\)\"\ntemp$id[c(8, 9)] = \"N\"\n\n```\n\n::::{.columns}\n:::{.column width=\"30%\"}\n\n<br>\n<br>\n**Example:**<br>\nlarge longitudinal study\n:::\n\n:::{.column width=\"70%\"}\n\n<br>\n\n```{r}\nkable(temp, digits = 1, escape = FALSE, format = \"html\", \n      table.attr = \"class='datatab-scen'\")\n```\n<img src=\"images/arrow.png\" id = arrow1>\n:::\n::::\n\n\n\n## Scenario 2: Many Repeated Measurements\n\n```{r}\ntemp = select(tdat, !matches(\"setting\"))\ntemp$id = as.character(temp$id)\ntemp$id[c(2, 5, 9)] = \"\\\\(\\\\vdots\\\\)\"\ntemp$id[c(4)] = \"2\"\n\n```\n\n::::{.columns}\n:::{.column width=\"30%\"}\n<br>\n<br>\n\n\n**Example:**\n\n* Data from wearables\n* \"time-series\"\n:::\n\n:::{.column width=\"70%\"}\n\n<br>\n\n```{r}\nkable(temp, digits = 1, escape = FALSE, format = \"html\", \n      table.attr = \"class='datatab-scen'\")\n```\n<img src=\"images/arrow.png\" id = arrow2a>\n<img src=\"images/arrow.png\" id = arrow2b>\n<img src=\"images/arrow.png\" id = arrow2c>\n:::\n::::\n\n\n## Scenario 3: Many Covariates\n\n```{r}\ntemp = select(tdat[-nrow(tdat), ], !matches(\"setting\"))\ntemp$`\\\\(x_4\\\\)` = \"\\\\(\\\\ldots\\\\)\"\nfor (i in 1:3) {\n  temp = cbind(temp, data.frame(`...` = \"\\\\(\\\\ldots\\\\)\"))\n}\ntemp$`\\\\(x_p\\\\)` = \"\\\\(\\\\vdots\\\\)\"\n\n```\n\n::::{.columns}\n:::{.column width=\"25%\"}\n\n\n<br>\n<br>\n\n**Example:**<br>\ngenetic markers\n:::\n\n:::{.column width=\"75%\"}\n\n<br>\n\n```{r}\nkable(temp, digits = 1, escape = FALSE, format = \"html\", \n      table.attr = \"class='datatab-scen'\")\n```\n<img src=\"images/arrow.png\" id = arrow3>\n:::\n::::\n\n\n\n## Scenario 4: Many Outcomes\n\n```{r}\ntemp = select(tdat, id, y) %>%\n  rename(\"\\\\(y_1\\\\)\" = \"y\")\ntemp$`\\\\(y_2\\\\)` = \"\\\\(\\\\ldots\\\\)\"\ntemp$`\\\\(y_3\\\\)` = \"\\\\(\\\\ldots\\\\)\"\n\nfor (i in 1:2) {\n  temp = cbind(temp, data.frame(`...` = \"\\\\(\\\\ldots\\\\)\"))\n}\n\ntemp$`\\\\(y_K\\\\)` = \"\\\\(\\\\ldots\\\\)\"\n\ntemp = cbind(temp, select(tdat, time, `\\\\(x_1\\\\)`, `\\\\(x_2\\\\)`, `\\\\(x_3\\\\)`))\n\n```\n\n::::{.columns}\n:::{.column width=\"35%\"}\n<br>\n<br>\n\n\n**Example:**<br>\nRepeated imaging/omics data\n:::\n\n:::{.column width=\"65%\"}\n\n<br>\n\n```{r}\nkable(temp, digits = 1, escape = FALSE, format = \"html\", \n      table.attr = \"class='datatab-scen'\")\n```\n<img src=\"images/arrow.png\" id = arrow4>\n:::\n::::\n\n## My Data: Continuous Monitoring\n\n::::{.columns}\n\n:::{.column width=\"45%\"}\n\n<br>\n\n* N = 916 patients (for now...)\n* follow-up: 1 hr - 27 days\n* measurements every 20 seconds\n  * 180 obs./hour &#8680; 4320 obs./day\n\n&#8680; 9.3 million rows\n\n:::{.fragment}\n<br>\n\n* 6 outcomes of interest\n:::\n\n:::{.fragment}\n[ &#8680; **Scenario 2** with additional challenges]{.red}\n:::\n\n:::\n\n:::{.column width=\"55%\"}\n\n```{r}\n#| eval: false\n\ndatadir <- \"/Volumes/Onderzoek_Acute_Geneekunde/22-846_COVERED_C2W/C_PersonalData/1_SourceData\"\nload(file.path(datadir, \"Files_Nicole_Erler\", \"dat_clean_2024-11-20.RData\"))\n\nsdat = subset(dat, id == 1111)\n\nsdat %>%\n  ggplot(aes(x = mtime, y = hr)) +\n  geom_point(size = 0.1) +\n  scale_x_continuous(\"follow-up time (hours)\", breaks = seq(0, 120, 24)) +\n  scale_y_continuous(\"heart rate\")\n\nggsave(\"images/hr_example_1p.png\", width = 6, height = 5, dpi = 600,\n       bg = \"transparent\", scale = 0.8)\n```\n\n<img src=\"images/hr_example_1p.png\" id = \"hr\">\n:::\n::::\n\n\n# Scalability {.center .middle}\n\n## Scenario 1 & 2: Number of Observations\n\n:::{style=\"font-size: 1.4rem;\"}\n$$y_{ij} = \\beta_0  + \\beta_1 t_{ij} + b_{i0} + b_{i1} t_{ij} + \\varepsilon_{ij},\n\\quad i = 1,\\ldots, \\bbox[#516682, 6px]{N}, \\quad j = 1,\\ldots, \\bbox[#906E8A, 6px]{J}$$\n:::\n\n\n```{r}\n#| fig-align: center\n#| class: fragment\n#| fig-height: 3\n\ntimes_N = read.csv(\"runtimes/lmer_times_N.csv\")\ntimes_J = read.csv(\"runtimes/lmer_times_J.csv\")\n\nrbind(\n  mutate(times_N, set = \"N varying (J = 5 obs. per patient)\"),\n  mutate(times_J, set = \"J varying (N = 1000 patients)\")\n) %>%\n  ggplot(aes(x = N * J, y = sec, color = set)) +\n  geom_point(alpha = 0.5) +\n  geom_smooth(method = \"lm\", se = FALSE, formula = \"y ~ poly(x, 2)\") +\n  scale_x_continuous(expression(number~of~observations~(N %*% J)),\n                     breaks = seq(0, 10e6, 1e6),\n                     labels = \\(x) paste0(sprintf(\"%.1f\", x / 1e6), \" mil\")) +\n  scale_y_continuous(\"computation time (seconds)\", \n                     breaks = seq(0, 300, 30)) +\n  scale_color_manual(\"\", values = c(nord15, nord10)) +\n  annotate(\"text\", x = 9e6, y = 0, label = \"N = 1.8 mil\\nJ = 9000\", size = 3,\n           color = grey(0.4), vjust = 0) +\n  theme(legend.position = \"inside\",\n        legend.position.inside = c(0.2, 0.9))\n```\n\n## Scenario 1 & 2: Number of Observations\n\n:::{style=\"font-size: 1.4rem;\"}\n$$y_{ij} = \\beta_0  + \\beta_1 t_{ij} + b_{i0} + b_{i1} t_{ij} + \\varepsilon_{ij},\n\\quad i = 1,\\ldots, \\bbox[#516682, 6px]{N}, \\quad j = 1,\\ldots, \\bbox[#906E8A, 6px]{J}$$\n:::\n\n\n::::{.columns}\n:::{.column width=\"50%\"}\n\n```{r}\n\nfmt = function(x) {\n  ifelse(x >= 1e6, \n         paste0(sprintf(\"%.1f\", x/1e6),  \" mil\"),\n         format(x, big.mark = \" \", scientific = FALSE))\n}\n\ndata.frame(N = c(1000, 10000, 100000, 1e6, 10e6),\n           J = 5) %>%\n  mutate(#\"# obs\" = fmt(N * J),\n         \"\\\\(\\\\# \\\\boldsymbol\\\\beta\\\\)\" = 2,\n         \"\\\\(\\\\# \\\\sigma\\\\)\" = 1,\n         \"\\\\(\\\\# \\\\mathbf D\\\\)\" = 3,\n         \"\\\\(\\\\# \\\\mathbf b\\\\)\" = fmt(2*N),\n         N = fmt(N)) %>%\n  kable(format = \"html\", table.attr = \"class='datatab'\") %>%\n  add_header_above(c(\"data\" = 2, \"parameters\" = 4)) %>%\n  column_spec(1, background = darken(nord10, 0.2)) %>%\n  column_spec(6, color = darken(nord10, 0.3))\n           \n```\n\n:::\n\n:::{.column width=\"50%\"}\n\n```{r}\ndata.frame(N = 1000,\n           J = c(5, 10, 100, 1000, 10000)) %>%\n  mutate(#\"# obs\" = fmt(N * J),\n         \"\\\\(\\\\# \\\\boldsymbol\\\\beta\\\\)\" = 2,\n         \"\\\\(\\\\# \\\\sigma\\\\)\" = 1,\n         \"\\\\(\\\\# \\\\mathbf D\\\\)\" = 3,\n         \"\\\\(\\\\# \\\\mathbf b\\\\)\" = fmt(2*N),\n         N = fmt(N)) %>%\n  kable(format = \"html\", table.attr = \"class='datatab'\") %>%\n  column_spec(2, background = darken(nord15, 0.2)) %>%\n  add_header_above(c(\"data\" = 2, \"parameters\" = 4))\n           \n```\n\n:::\n::::\n\n<br>\n\n```{r}\n#| fig-width: 7\n#| fig-height: 2\n#| fig-align: center\n\n\nrbind(\n  data.frame(N = seq(0, 2e6, 1e5),\n             J = 5,\n             sig = 1,\n             beta = 2,\n             rd = 2,\n             varying = \"N\"),\n  data.frame(N = 1000,\n             J = c(1, 10, 50, 100, 10000),\n             sig = 1,\n             beta = 2,\n             rd = 2,\n             varying = \"J\") \n) %>%\n  mutate(nobs = N * J,\n         b = N * rd,\n         d = (rd^2 + rd)/2,\n         pars = sig + beta + b + d) %>%\n  ggplot(aes(x = nobs, y = pars, color = varying)) +\n  geom_line() +\n  scale_x_continuous(expression(number~of~observations~(N %*% J)),\n                     breaks = seq(0, 10e6, 1e6),\n                     labels = \\(x) paste0(sprintf(\"%.1f\", x / 1e6), \" mil\")) +\n  scale_y_continuous(\"number of\\n parameters\",\n                     breaks = seq(0, 5e6, 1e6),\n                     labels = \\(x) paste0(sprintf(\"%.1f\", x / 1e6), \" mil\")) +\n  coord_fixed() +\n  scale_color_manual(\"varying:\", values = c(nord10, nord15), breaks = c(\"N\", \"J\")) +\n  theme(axis.text.x = element_text(size = 6))\n```\n\n\n\n\n## Parameter Estimation in the (Linear) Mixed Model\n\nConditional formulation, given the [unobserved random effects $\\mathbf b_i$]{.blue .strong}:\n\n$$\\mathbf y_i \\color{var(--nord10)}{\\mid \\mathbf b_i} \\sim N\\left(\\mathbf X_i \\boldsymbol\\beta \\color{var(--nord10)}{+ \\mathbf Z_i\\mathbf b_i},\\; \\sigma^2 \\mathbf I\\right)$$\n**Integrating** over the random effects...\n$$f(\\mathbf y_i) = \\color{var(--nord11)}{\\int} f(\\mathbf y_i \\mid \\mathbf b_i)\\; f(\\mathbf b_i) \\; \\color{var(--nord11)}{d\\mathbf b_i}$$\n...results in the **marginal model**:\n$$\\mathbf y_i \\sim N(\\mathbf X_i \\boldsymbol\\beta,\\; \\color{var(--nord14)}{\\mathbf Z_i \\mathbf D \\mathbf Z_i^\\top} + \\sigma^2 \\mathbf I)$$\n\n:::{.fragment}\n\n:::{style=\"text-align: center;\"}\n[{{< fa regular smile >}}]{.green} fewer parameters to estimate\n&emsp;&emsp;\n[{{< fa regular frown >}}]{.red} integration\n:::\n:::\n\n\n\n\n## Scenario 3: Covariate Terms\n\n$$y_{ij} = \\beta_0 + \\bbox[#516682, 8px]{\\beta_1 t_{ij} + \\beta_2 x_{ij1} + \\ldots + \\beta_p x_{ijp}} +\nb_{i0} + b_{i1} t_{ij} + \\varepsilon_{ij}, \\quad {\\scriptsize\\begin{array}{l}i = 1,\\ldots, 2000\\\\j = 1,\\ldots, 10\\end{array}}$$\n\n```{r}\n#| fig.height: 3.5\n#| fig.width: 7\n\ntimes_p = read.csv(\"runtimes/lmer_times_p.csv\")\n\nggplot(times_p, aes(x = p, y = sec)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE, formula = \"y ~ poly(x, 2)\",\n              color = nord10) +\n  scale_x_continuous(\"number of fixed effects\",\n                     breaks = seq(0, 1000, 100)) +\n  scale_y_continuous(\"computation time (seconds)\",\n                     breaks = seq(0, 300, 30)) +\n  scale_color_viridis_d(\"\", end = 0.6) +\n  theme(legend.position = \"top\")\n```\n\n\n\n## Scenario 3: Covariate Terms\n\n$$y_{ij} = \\beta_0 + \\bbox[#516682, 8px]{\\beta_1 t_{ij} + \\beta_2 x_{ij1} + \\ldots + \\beta_p x_{ijp}} +\nb_{i0} + b_{i1} t_{ij} + \\varepsilon_{ij}, \\quad {\\scriptsize\\begin{array}{l}i = 1,\\ldots, 2000\\\\j = 1,\\ldots, 10\\end{array}}$$\n\n::::{.columns}\n:::{.column width=\"50%\"}\n```{r}\ndata.frame(N = 2000,\n           J = 10,\n           \"\\\\(\\\\# \\\\boldsymbol\\\\beta\\\\)\" = c(1, 10, 100, 1000),\n           check.names = FALSE) %>%\n  mutate(\"# obs\" = fmt(N * J),\n         \"\\\\(\\\\# \\\\sigma\\\\)\" = 1,\n         \"\\\\(\\\\# \\\\mathbf D\\\\)\" = 3,\n         \"\\\\(\\\\# \\\\mathbf b\\\\)\" = fmt(2*N),\n         N = fmt(N)) %>%\n  select(N, J, `# obs`, everything()) %>%\n  kable(format = \"html\", table.attr = \"class='datatab'\") %>%\n  add_header_above(c(\"data\" = 3, \"parameters\" = 4)) %>%\n  column_spec(4, background = darken(nord10, 0.2))\n\n           \n```\n\n:::\n\n:::{.column width=\"50%\"}\n\n```{r}\n#| fig-width: 4.5\n#| fig-height: 4.5\n#| out-width: 80%\n\ndata.frame(N = 2000,\n           J = 10,\n           sig = 1,\n           rd = 2,\n           beta = seq(0, 1000, 50)) %>%\n  mutate(nobs = N * J,\n         b = N * rd,\n         d = (rd^2 + rd)/2,\n         pars = sig + beta + b + d) %>%\n  ggplot(aes(x = beta, y = pars)) +\n  geom_line(color = nord10) +\n  scale_x_continuous(\"number of covariate terms\",\n                     breaks = seq(0, 1000, 100)) +\n  scale_y_continuous(\"number of parameters\",\n                     breaks = seq(0, 1e5, 100)) +\n  coord_fixed()\n```\n\n:::\n::::\n\n\n\n## Scenario 4: Number of Outcome Variables\n\n$$\n\\begin{array}{ccl}\ny_{ij\\color{var(--nord11)}{1}} &=&\\beta_{0\\color{var(--nord11)}{1}} + \\beta_{1\\color{var(--nord11)}{1}} t_{ij\\color{var(--nord11)}{1}}  + b_{i0\\color{var(--nord11)}{1}} + b_{i1\\color{var(--nord11)}{1}} t_{ij\\color{var(--nord11)}{1}} + \\varepsilon_{ij\\color{var(--nord11)}{1}}\\\\\n\\vdots & \\vdots & \\vdots\\\\\ny_{ij\\color{var(--nord11)}{K}} &=&\\beta_{0\\color{var(--nord11)}{K}} + \\beta_{1\\color{var(--nord11)}{K}} t_{ij\\color{var(--nord11)}{K}}  + b_{i0\\color{var(--nord11)}{K}} + b_{i1\\color{var(--nord11)}{K}} t_{ij\\color{var(--nord11)}{K}} + \\varepsilon_{ij\\color{var(--nord11)}{K}}\n\\end{array} \\quad {\\scriptsize\\begin{array}{l}i = 1,\\ldots, N\\\\j = 1,\\ldots, J\\\\\\bbox[#BF616A, 2pt]{k = 1, \\ldots, K}\\end{array}}\n$$\n\nwith\n\n$$\\mathbf b_i = \\begin{pmatrix} b_{i0\\color{var(--nord11)}{1}} \\\\ \n  b_{i1\\color{var(--nord11)}{1}}\\\\ \\vdots \\\\ b_{i0\\color{var(--nord11)}{K}} \\\\\n  b_{i1\\color{var(--nord11)}{K}} \\end{pmatrix} \\sim N(\\mathbf 0, \\mathbf D)\n\\qquad \\text{and}\\qquad\n\\varepsilon_{ij\\color{var(--nord11)}{k}} \\sim N(0, \\sigma_\\color{var(--nord11)}{k}^2 \\mathbf I)$$\n\n\n## Scenario 4: Number of Outcome Variables\n\n\n::::{.columns}\n:::{.column width=\"50%\"}\n\n<br>\n\nFor the intercept & slope model:\n```{r}\ndata.frame(N = 1000,\n           J = 10000,\n           K = c(1, 2, 3, 4, 5, 10, 100, 1000, 5000),\n           check.names = FALSE) %>%\n  mutate(#\"# obs\" = fmt(N * J * K),\n        \"\\\\(\\\\# \\\\boldsymbol\\\\beta\\\\)\" = 2 * K,\n         \"\\\\(\\\\# \\\\sigma\\\\)\" = K,\n         \"\\\\(\\\\# \\\\mathbf D\\\\)\" = fmt(((2*K)^2 + (2*K))/2),\n         \"\\\\(\\\\# \\\\mathbf b\\\\)\" = fmt(2 * N * K),\n         N = fmt(N),\n        J = fmt(J)) %>%\n  select(N, J, K, everything()) %>%\n  kable(format = \"html\", table.attr = \"class='datatab'\") %>%\n  add_header_above(c(\"data\" = 3, \"parameters\" = 4)) %>%\n  column_spec(3, background = darken(nord11, 0.2)) %>%\n  column_spec(6, color = lighten(nord11, 0.15))\n\n```\n\n:::\n\n:::{.column width=\"50%\"}\n\n<br>\n\n```{r}\n#| fig-width: 5\n#| fig-height: 4.5\n#| out-width: 90%\n\ndata.frame(N = 1000,\n           J = 10000,\n           K = c(seq(1, 900, 100), seq(1000, 5000, 100))\n) %>%\n  mutate(nobs = N * J * K,\n         sig = K,\n         rd = 2 * K,\n         beta = rd,\n         b = N * rd,\n         d = (rd^2 + rd)/2,\n         pars = sig + beta + b + d,\n         marg = sig + beta + d) %>%\n  ggplot(aes(x = K, y = pars)) +\n  geom_line(color = nord11) +\n  geom_line(aes(y = marg), color = nord4, linetype = 2) +\n  scale_x_continuous(\"number of outcome variables\",\n                     breaks = seq(0, 10000, 500)) +\n  scale_y_continuous(\"number of parameters\",\n                     breaks = seq(0, 1e8, 1e7),\n                     labels = fmt) +\n  annotate(\"label\", x = 3500, y = 50e6, label = \"all parameters\\n(incl. b)\",\n           alpha = 0.1, color = nord11, label.size = 0, label.padding = unit(0.25, \"lines\"),\n           size = 3.5) +\n  annotate(\"label\", x = 4500, y = 20e6, label = \"in marg. model\\n(without b)\",\n           alpha = 0.1, color = nord4, label.size = 0, label.padding = unit(0.25, \"lines\"),\n           size = 3.5)\n```\n\n:::\n::::\n\n\n\n## Scenario 5 (!): Random Effect Terms\n\n$$y_{ij} = \\beta_0  + \\beta_1 t_{ij} + \\ldots + \\beta_p t_{ij}^p +\n\\bbox[#906E8A, 8px]{b_{i0} + b_{i1} t_{ij} + \\ldots + b_{ip} t_{ij}^p} + \n\\varepsilon_{ij}, \\quad {\\scriptsize\\begin{array}{l}i = 1,\\ldots, 50\\\\j = 1,\\ldots, 100\\end{array}}$$\n\n\n```{r}\n#| fig.height: 3.5\n#| fig.width: 7\n\ntimes_rd = read.csv(\"runtimes/lmer_times_rd.csv\")\n\nsubset(times_rd, N == 50) %>%\n  ggplot(aes(x = nrd, y = sec)) +\n  geom_point(alpha = 0.7) +\n  geom_smooth(method = \"lm\", se = FALSE, formula = \"y ~ poly(x, 3)\", color = nord15) +\n  scale_x_continuous(\"number of random effects\",\n                     breaks = seq(0, 20, 2)) +\n  scale_y_continuous(\"computation time (seconds)\",\n                     breaks = seq(0, 300, 30)) +\n  theme(legend.position = \"inside\",\n        legend.position.inside = c(0.2, 0.9))\n```\n\n\n\n\n\n\n## Scenario 5 (!): Random Effect Terms\n\n$$y_{ij} = \\beta_0  + \\beta_1 t_{ij} + \\ldots + \\beta_p t_{ij}^p +\n\\bbox[#906E8A, 8px]{b_{i0} + b_{i1} t_{ij} + \\ldots b_{ip} t_{ij}^p} + \n\\varepsilon_{ij}, \\quad {\\scriptsize\\begin{array}{l}i = 1,\\ldots, N\\\\j = 1,\\ldots, J\\end{array}}$$\n\n::::{.columns}\n:::{.column width=\"50%\"}\n```{r}\ndata.frame(N = 50,\n           J = 100,\n           \"# rd. effect terms\" = c(1, 2, 3, 4, 5, 10, 50, 100),\n           \"\\\\(\\\\# \\\\boldsymbol\\\\beta\\\\)\" = c(1, 2, 3, 4, 5, 10, 50, 100),\n           check.names = FALSE) %>%\n  mutate(#\"# obs\" = N * J,\n         \"\\\\(\\\\# \\\\sigma\\\\)\" = 1,\n         \"\\\\(\\\\# \\\\mathbf D\\\\)\" = (`# rd. effect terms`^2 + `# rd. effect terms`)/2,\n         \"\\\\(\\\\# \\\\mathbf b\\\\)\" = N * `# rd. effect terms`) %>%\n  select(N, J, everything()) %>%\n  kable(format = \"html\", table.attr = \"class='datatab'\") %>%\n  add_header_above(c(\"data\" = 2, \" \" = 1, \"parameters\" = 4)) %>%\n  column_spec(4, background = darken(nord15, 0.2)) %>%\n  column_spec(6:7, color = lighten(nord15, 0.15))\n           \n```\n\n:::\n\n:::{.column width=\"50%\"}\n\n```{r}\npl0 <- data.frame(\n  N = 10,\n  J = 10000,\n  sig = 1,\n  beta = 2,\n  rd = c(1:100)) %>%\n  mutate(\n    obs = N * J,\n    b = N * rd,\n    d = (rd^2 + rd)/2,\n    pars = sig + beta + b + d\n  ) %>%\n  ggplot(aes(x = rd, y = pars)) +\n  geom_line(color = nord15) +\n  scale_x_continuous(\"number of\\nrandom\\neffects\\nterms\",\n                     breaks = seq(0, 15, 15)) +\n  scale_y_continuous(\"number of parameters\",\n                     breaks = seq(0, 1e5, 1e3))\n\n```\n\n```{r}\n#| fig-width: 4.5\n#| fig-height: 4\n#| fig-align: center\n#| out-width: 85%\n\npl0 +\n    # coord_fixed(ratio = 0.002) +\n    scale_x_continuous(\"number of random effects terms\",\n                       breaks = seq(0, 250, 20))\n\n```\n:::\n::::\n\n\n## Conclusion\n\n<br>\n\n**Scenario 1 & 2: Many clusters/patients or many repeated measurements**\n\n* LMM probably feasible\n* for extreme $N$: split the data, fit models in parallel, combine\n* for extreme $J$: splitting possible, but combining maybe more complex\n\n<br>\n\n:::{.fragment}\n**Scenario 3: Many covariates**\n\n* LMM probably feasible\n* regularization (e.g., ridge, lasso) may be a good idea\n\n:::\n\n## Conclusion\n\n<br>\n\n**Scenario 4: Many outcome variables**\n\n* Potentially serious challenges!\n* LMM feasible for small $K$ and few random effects terms\n* **Software**: more limited, typically Bayesian (cond. model)\n\n:::{.fragment}\nAlternatives to the full multivariate model:\n\n* stacking the data & use interaction with outcome indicator\n* pairwise approach\n* simplify the structure of $\\mathbf D$ (e.g., diagonal)\n\n:::\n\n## Stacking the Data\n\n```{r}\n\ntemp = data.frame(\n  id = c(1, \"\\\\(\\\\vdots\\\\)\", 1, 1, \"\\\\(\\\\vdots\\\\)\", 1, 2,\"\\\\(\\\\vdots\\\\)\"),\n  \"\\\\(\\\\color{var(--nord11)}{k}\\\\)\" = c(rep(paste0(\"y\", 1:2), each = 3), \"y1\", \"y1\"),\n  time = c(0, \"\\\\(\\\\vdots\\\\)\", 9.3, 0, \"\\\\(\\\\vdots\\\\)\", 7.8, 0, \"\\\\(\\\\vdots\\\\)\"),\n  check.names = FALSE\n)\n\n\n```\n\n::::{.columns}\n:::{.column width=\"60%\"}\nInteraction with an indicator variable:\n<br>\n$$\n\\begin{align} y_{ij} = & (\\beta_0 + b_{i01}) + (\\beta_1 + b_{i11}) t_{ij} \\\\\n& + (\\beta_2  + b_{i02})\\ I(\\color{var(--nord11)}{k = 2}) + \n (\\beta_3  + b_{i12})\\ I(\\color{var(--nord11)}{k = 2})t_{ij}\\\\\n  & + \\ldots +\\\\\n&  + (\\beta_{p-1}  + b_{i0K})\\ I(\\color{var(--nord11)}{k = K})  + \n (\\beta_p + b_{i1K})\\ I(\\color{var(--nord11)}{k = K}) t_{ij}\\\\\n& + \\varepsilon_{ij}\n\\end{align}\n$$\n\n&#8680; specify weights to accommodate $\\sigma_\\color{var(--nord11)}{1}, \\ldots, \\sigma_\\color{var(--nord11)}{K}$\n:::\n\n:::{.column width=\"40%\"}\n\n```{r}\nkable(temp, digits = 1, escape = FALSE, format = \"html\", \n      table.attr = \"class='datatab-scen'\") %>%\n  row_spec(4:6, background = lighten(theme_bg, 0.02))\n```\n:::\n::::\n\n:::{.fragment}\n::::{.columns}\n:::{.column width=\"50%\"}\n[{{< fa regular smile >}}]{.green} standard LMM software<br>\n[{{< fa regular smile >}}]{.green} works for unbalanced data\n:::\n\n:::{.column width=\"50%\"}\n[{{< fa regular frown >}}]{.red} only for outcomes of the same type\n:::\n::::\n\n:::\n\n## Pairwise approach\n\nFit models for all pairs of outcomes:\n$$(y_1, y_2), (y_1, y_3), (y_2, y_3), \\ldots, (y_{K-1}, y_K)$$\n\n* average parameters estimated in multiple models\n  e.g., $\\beta_{11}$ is estimated in $(y_1, y_2)$, $(y_1, y_3)$, ...\n  \n* Pairwise models can be run in parallel.\n* Doesn't work in joint models.\n\n\n## Conclusion\n\n<br>\n\n**Scenario 5: Random Effect Terms**\n\n* feasible for moderate number of random effects terms (e.g., &le; 10) and \n  sample size (e.g., N = 1000)\n* larger models/data may require simplification of $\\mathbf D$\n\n\n\n```{r}\n\ndata.frame(N = 1000,\n           J = 10000,\n           K = c(5, 6),\n           check.names = FALSE) %>%\n  mutate(\"# obs\" = fmt(N * J * K),\n         rd = 10,\n        \"\\\\(\\\\# \\\\boldsymbol\\\\beta\\\\)\" = rd * K,\n         \"\\\\(\\\\# \\\\sigma\\\\)\" = K,\n         \"\\\\(\\\\# \\\\mathbf D\\\\)\" = fmt(((rd*K)^2 + (rd*K))/2),\n         \"\\\\(\\\\# \\\\mathbf b\\\\)\" = fmt(rd * N * K),\n         N = fmt(N)) %>%\n  select(N, J, K, `# obs`, everything()) %>%\n  kable(format = \"html\", table.attr = \"class='datatab'\") %>%\n  add_header_above(c(\"data\" = 4, \" \", \"parameters\" = 4)) %>%\n  column_spec(3, background = darken(nord11, 0.2)) %>%\n  column_spec(8, color = lighten(nord11, 0.15))\n\n```\n\n\n\n# More Challenges!\n\n\n## Estimation of the Random Effects\n\n**Empirical Bayes** estimate:\n\n$$\\mathbf{\\hat b}_i = \\widehat{\\mathbf D} \\mathbf Z_i^\\top \\left(\\mathbf Z_i \\mathbf{\\widehat D} \\mathbf Z_i^\\top + \\sigma^2 \\mathbf I\\right)^{-1} (\\mathbf y_i - \\mathbf x_i^\\top \\boldsymbol{\\hat\\beta})$$\n\n* $\\widehat{\\mathbf D}$ is a $10 \\times 10$ matrix\n* $\\mathbf Z_i$ is a $10\\ 000 \\times 10$ matrix\n\n&#8680; $\\mathbf Z_i \\mathbf{\\widehat D} \\mathbf Z_i^\\top$ is $10\\ 000 \\times 10\\ 000$ (or larger)\n\n\n## Matrix Inversion\n\n```{r}\n\nrt_R = read.csv(\"runtimes/runtimes_R.csv\")\nrt_Rch = read.csv(\"runtimes/runtimes_Rc.csv\")\nrt_jl = read.csv(\"runtimes/runtimes_JL.csv\", header = FALSE)\ncolnames(rt_jl) = c(\"n\", \"sec\")\n\ndatt = list(Rsolve = as.data.frame(rt_R),\n            Rchol = as.data.frame(rt_Rch),\n            Julia = rt_jl) %>%\n  reshape2::melt(id.vars = colnames(.[[1]])) %>%\n  dplyr::mutate(nrel = n/1000)\n\nfit_all = lm(sec ~ 0 + I(nrel^3):L1, data = datt)\n\nndf = expand.grid(n = seq(0, 20000, by = 500),\n                  L1 = c(\"Rchol\", \"Rsolve\", \"Julia\")) %>%\n  dplyr::mutate(nrel = n/1000)\n\nndf$sec = predict(fit_all, newdata = ndf)\n\ntp0 <- subset(datt, L1 != \"Julia\") %>%\n  ggplot(aes(x = n, y = sec, color = L1)) +\n  geom_point() +\n  theme(legend.position = \"none\") +\n  scale_color_manual(values = c(nord7, nord10)) +\n  xlab(\"matrix dimension (J)\") +\n  ylab(\"computation time (seconds)\")\n\n```\n\n:::{.r-stack}\n```{r}\ntp0 +\n  geom_line(data = subset(ndf, n <= 5000 & L1 != \"Julia\"), linetype = 2) +\n  geom_label(data = data.frame(n = c(4000, 4500),\n                               sec = c(50, 20), \n                               L1 = c(\"Rsolve\", \"Rchol\"),\n                               method = c(\"solve()\", \"chol2inv(chol())\")),\n             aes(label = method), label.size = 0, alpha = 0.1)\n\n```\n\n```{r}\n#| class: fragment\ntp0 +\n  geom_line(data = subset(ndf, L1 != \"Julia\"), linetype = 2) +\n  geom_label(data = data.frame(n = c(14000, 17000),\n                               sec = c(2500, 1200), \n                               L1 = c(\"Rsolve\", \"Rchol\"),\n                               method = c(\"solve()\", \"chol2inv(chol())\")),\n             aes(label = method), label.size = 0, alpha = 0.1) +\n    scale_y_continuous(expression(computation~time~(bold(minutes))),\n                       labels = \\(x)x/60, seq(0, 10000, 60*10))\n\n```\n\n```{r}\n#| class: fragment\n#| \ntp0 %+% datt +\n  scale_color_manual(values = c(nord15, nord7, nord10)) +\n  geom_line(data = ndf, linetype = 2) +\n  geom_label(data = data.frame(n = c(14000, 17000, 18000),\n                               sec = c(2500, 1200, 5*60), \n                               L1 = c(\"Rsolve\", \"Rchol\", \"Julia\"),\n                               method = c(\"solve()\", \"chol2inv(chol())\", \"Julia\")),\n             aes(label = method), label.size = 0, alpha = 0.1) +\n  scale_y_continuous(expression(computation~time~(bold(minutes))),\n                     labels = \\(x)x/60, seq(0, 10000, 60*10))\n\n```\n:::\n\n\n\n\n\n\n## My Data\n\n```{r}\n#| eval: false\n\ndatadir <- \"/Volumes/Onderzoek_Acute_Geneekunde/22-846_COVERED_C2W/C_PersonalData/1_SourceData\"\nload(file.path(datadir, \"Files_Nicole_Erler\", \"dat_clean_2024-11-20.RData\"))\n\ntest = subset(dat, !is.na(hr)) %>%\n  reframe(.by = \"id\",\n          nobs = length(id))\n\n#ids = subset(test, nobs < 30000 & nobs > 7000)$id\n\nids = c(1111, 1010, 1129, 1299, 1202, 1304)\n\nsdat = subset(dat, !is.na(hr) & id %in% ids & mtime <= 84)\n\nsdat %>%\n  subset(id %in% ids) %>%\n  ggplot(aes(x = mtime, y = hr)) +\n  geom_point(size = 0.1, alpha = 0.3) +\n  facet_wrap(\"id\") +\n  scale_y_continuous(\"heart rate\", breaks = seq(0, 250, 50)) +\n  scale_x_continuous(\"follow-up time (hours)\", breaks = seq(0, 120, 24))\n\nggsave(\"images/hrexample.png\", width = 7, height = 3.5, dpi = 600, scale = 1.2)\n```\n\n<img src=\"images/hrexample.png\" id = \"hr\">\n\n## My Model \n\n```{css}\n:root {\n  --nord15: #B48EAD;\n  --nord10: #5E81AC;\n  --nord8: #88C0D0;\n  --nord11: #BF616A;\n  --nord14: #A3BE8C;\n}\n\n```\n\n\\begin{align*}\ny_{i}(t) = & \\beta_0 + \\color{var(--nord15)}{b_{i0}} + (\\beta_1 + \\color{var(--nord15}{b_{i1}})\\; t \\;+ \\\\\n& (\\beta_2 + \\color{var(--nord15)}{b_{i2}}) \\sin\\left(2\\pi \\frac{t\\bmod 24}{24}\\right) +\n    (\\beta_3 + \\color{var(--nord15)}{b_{i3}}) \\cos\\left(2\\pi \\frac{t\\bmod 24}{24}\\right) +\\\\\n& (\\beta_4 + \\color{var(--nord15)}{b_{i4}}) \\sin\\left(2\\pi \\frac{t\\bmod 24}{12}\\right) + \n  (\\beta_5 + \\color{var(--nord15)}{b_{i5}}) \\cos\\left(2\\pi \\frac{t\\bmod 24}{12}\\right) +\\\\\n& (\\beta_6 + \\color{var(--nord15)}{b_{i6}}) \\;t\\sin\\left(2\\pi \\frac{t\\bmod 24}{24}\\right) + \n  (\\beta_7 + \\color{var(--nord15)}{b_{i7}}) \\;t\\cos\\left(2\\pi \\frac{t\\bmod 24}{24}\\right) +\\\\\n& (\\beta_8 + \\color{var(--nord15)}{b_{i8}}) \\;t\\sin\\left(2\\pi \\frac{t\\bmod 24}{12}\\right) +\n  (\\beta_9 + \\color{var(--nord15)}{b_{i9}}) \\;t\\cos\\left(2\\pi \\frac{t\\bmod 24}{12}\\right) +\\\\\n& \\varepsilon_i(t)\n\\end{align*}\n\n## My Model\n\n```{r}\nvisdat = read.csv(\"images/sincos_viz.csv\")\n\nvisdat |>\n  # subset(id < 30) |>\n  ggplot(aes(x = time, y = y, group = id, color = factor(id))) +\n  geom_line(linewidth = 1) +\n  scale_color_manual(values = c(nord7, nord15, nord10, nord8, nord9)) +\n  scale_x_continuous(\"follow-up time (hours)\", breaks = seq(0, 150, 24)) +\n  scale_y_continuous(\"heart rate\", breaks = seq(-15, 15, 3)) +\n  theme(legend.position = \"none\",\n        axis.text.y = element_blank())\n```\n\n\n\n\n\n\n\n\n\n\n# Thank You{.the-end .center .middle .no-footer}\n","srcMarkdownNoYaml":"\n\n```{r packages}\nlibrary(\"kableExtra\")\nlibrary(\"ggplot2\")\nlibrary(\"dplyr\")\nlibrary(\"colorspace\")\n```\n\n\n```{r}\nget_color_theme <- function(file) {\n  str <- readLines(file) %>%\n    gsub(\" *\\\\/\\\\*[[:print:]]*\\\\*\\\\/ *\",  \"\", .) %>%\n    gsub(\"^\\\\$|;$\", \"\", .) %>%\n    gsub(\"-\",\"_\", .) %>%\n    strsplit(., \": \") %>%\n    do.call(rbind, .)\n  \n  s <- as.list(setNames(str[, 2], str[, 1])) %>%\n    list2env(., envir = .GlobalEnv)\n}\n\n\nget_color_theme(\"styles/color-theme-nord.scss\")\n```\n\n```{r}\ntheme_set(theme_minimal())\ntheme_update(\n  panel.grid = element_line(color = nord0),\n  # panel.border = element_rect(fill = 'transparent',\n  #                             color = 'transparent'),\n  panel.background = element_rect(fill = \"transparent\",\n                                  color = \"transparent\"),\n  plot.background = element_rect(fill = theme_bg,\n                                 color = \"transparent\"),\n  strip.background = element_rect(fill = nord1,\n                                  color = nord1),\n  strip.text = element_text(color = nord4,\n                            size = 8,\n                            margin = margin(4, 4, 4, 4)\n                            ),\n  legend.background = element_blank(),\n  legend.key = element_blank(),\n  legend.text = element_text(color = nord4),\n  legend.title = element_text(color = nord4),\n  # axis.line = element_line(color = nord3),\n  axis.text = element_text(color = lighten(nord3, 0.2)),\n  axis.title = element_text(color = lighten(nord3, 0.2))\n)\n\nupdate_geom_defaults(\"point\", list(color = nord6))\n\n# data.frame(x = 1:10, y = rnorm(10)) %>%\n#   ggplot(aes(x = x, y = y)) +\n#   geom_point()\n```\n\n```{r}\ndatakbl <- function(x, digits = 1) {\n  kable(x, digits = digits, escape = FALSE, format = \"html\",\n        table.attr = \"class='datatablarge'\") %>%\n    row_spec(which(x$id %% 2 == 1), \n             background = lighten(theme_bg, 0.05))\n}\n```\n\n\n# Motivation {.h1section}\n\n```{r}\n# Motivation: Continuous Monitoring Data\n# - plot with 6 outcomes plotted\n# - info slide with bullets\n# \n# Section: \n```\n\n## My Data: Continuous Monitoring\n\n<img src=\"images/MonitoringDevice.png\" id = \"wearable\" height= 500>\n\n<br>\n\nPatients at the general nursing ward.\n\n<br>\n\nRepeated measurements (every 20 sec) of\n\n* heart rate\n* blood pressure\n* body temperature\n* oxygen saturation\n* respiration\n* ...\n\n\n\n# The Linear Mixed Model{.h1section}\n\n## Data for Mixed Models\n\n::::{.columns}\n\n:::{.column width=60%}\n\nMinimal data structure for a (linear) mixed model:\n\n<br>\n\n::::: {.fragment fragment-index=1}\n\n* \"Clustered\" data<br>\n  &#8680; e.g., patients in different hospitals\n:::::\n\n::::: {.fragment fragment-index=2}\n\n* repeated measurements of the same subjects\n:::::\n:::\n\n:::{.column width=40%}\n```{r}\nset.seed(2025)\ntdat = data.frame(id = rep(1:3, c(4, 2, 3))) %>%\n  mutate(.by = \"id\",\n         y = rgamma(length(id), 2, 1),\n         time = seq_along(id) %>% jitter(factor = 0.8),\n         setting = sample(LETTERS[1:length(id)]),\n         `\\\\(x_1\\\\)` = rbinom(1, size = 1, 0.5),\n         `\\\\(x_2\\\\)` = rnorm(1, 1, 0.5),\n         `\\\\(x_3\\\\)` = sample(LETTERS[1:3], length(id), replace = TRUE)\n  )\n\n```\n\n::::::{.r-stack}\n\n```{r}\noptions(knitr.kable.NA = '\\\\(\\\\vdots\\\\)')\n\ntdat %>%\n  select(id, y) %>%\n  rbind(., rep(NA, 2)) %>%\n  datakbl()\n\n```\n\n::::: {.fragment fragment-index=2 style=\"background-color: #242933;\"}\n\n```{r}\ntdat %>%\n  select(id, y, setting) %>%\n  rbind(., rep(NA, 3)) %>%\n  datakbl()\n```\n:::::\n\n:::::{.fragment style = \"background-color: #242933;\"}\n\n```{r}\ntdat %>%\n  select(id, y, time) %>%\n  rbind(., rep(NA, 3)) %>%\n  datakbl()\n```\n\n:::::\n\n:::::{.fragment style = \"background-color: #242933;\"}\n\n```{r}\ntdat %>%\n  select(id, y, time, `\\\\(x_1\\\\)`, `\\\\(x_2\\\\)`, `\\\\(x_3\\\\)`) %>%\n  rbind(., rep(NA, 3)) %>%\n  datakbl()\n```\n\n:::::\n::::::\n\n:::\n::::\n\n\n\n\n\n\n## Linear Mixed Model\n\n<br>\n\nFor patient $i$ at time $t$:\n\n$$\ny_{i}(t) = \n\\underset{\\text{fixed effects}}{\\underbrace{\\mathbf x_{i}(t)^\\top \\boldsymbol{\\beta}}} + \n\\underset{\\text{random effects}}{\\underbrace{\\mathbf z_{i}(t)^\\top \\mathbf{b_{i}}}} + \n\\varepsilon_i(t)\n$$\n\n$$\\text{with}\\quad \\mathbf b_i \\sim N(\\mathbf 0, \\mathbf D) \\quad\\text{and}\n\\quad \\varepsilon_i(t) \\sim N(0, \\sigma^2)\n$$\n\n:::{.sgrey}\n\n* $\\mathbf x_i(t)^\\top$: vector of covariates\n* $\\mathbf z_i(t)^\\top$: vector of covariates with patient-specific effects\n\n* $\\boldsymbol\\beta$: fixed (population) effects\n* $\\mathbf b_i$: random (patient-specific) effects\n\n* $\\varepsilon_i(t)$: residual error\n\n:::\n\n## Random Intercept & Slope Model\n\n<br>\n\nFor example,\n\n$$y_i(t) = \\underset{\\text{fixed effects}}{\\underbrace{\\beta_0 + \\beta_1 t}} +\n  \\underset{\\text{random effects}}{\\underbrace{b_{i0} + b_{i1} t}} + \\varepsilon_i(t)$$\nwith\n$$\\mathbf b_i = \\begin{bmatrix}\nb_{i0}\\\\b_{i1}\n\\end{bmatrix} \\sim N\\left( \\begin{bmatrix}0\\\\0\\end{bmatrix}, \\begin{bmatrix}d_{11} & d_{12}\\\\d_{21} & d_{22}\\end{bmatrix}\\right)\n$$\n\n\n\n\n## Mixed Models Visualized\n\n```{r}\nlibrary(\"lme4\")\nlibrary(\"survival\")\n\nfit <- lmer(albumin ~ I(day/365) + (I(day/365) | id), data = pbcseq)\n\nids <- c(14, 33, 90)\n\npbcseq$pred = predict(fit)\npbcseq$pred0 = predict(fit, re.form = NA)\n\n\nndf = data.frame(id = ids,\n                 day = sapply(ids, \\(i) max(pbcseq$day[pbcseq$id == i]))) %>%\n  mutate(pred0 = predict(fit, newdata = ., re.form = NA),\n         pred = predict(fit, newdata = .),\n         xpos = day + c(180, 60, 360))\n\nrd = ranef(fit)$id[c(ids), ] %>%\n  tibble::rownames_to_column(\"id\") %>%\n  mutate(\n    beta0 = fixef(fit)[1],\n    ypos = beta0 + `(Intercept)`/2\n  ) %>%\n  merge(., ndf)\n\n\np0 <- pbcseq %>%\n  subset(id %in% c(33, # flat\n                   90, # steep\n                   14 # low\n  ), select = c(\"id\", \"day\", \"albumin\", \"pred\", \"pred0\")) %>%\n  reshape2::melt(id.vars = c(\"id\", \"day\", \"albumin\")) %>%\n  ggplot(aes(x = day, y = albumin)) +\n  facet_wrap(\"id\", nrow = 1,\n             labeller = as_labeller(\n               c(\"14\" = \"patient I\", \"33\" = \"patient II\", \"90\" = \"patient III\"))) +\n  theme(axis.text.y = element_blank(),\n        axis.ticks = element_blank(),\n        legend.position = \"top\") +\n  ylab(\"response y\") +\n  scale_x_continuous(\"time\", labels = \\(x)x/365.25, breaks = seq(0, 5000, 365.25)) +\n  scale_linetype_manual(\n    labels = c(\"fixed effects only\\n(population fit)\",\n               \"fixed and random effects\\n(patient specific fit)\"),\n    breaks = c(\"pred0\", \"pred\"),\n    values = c(2, 1),\n    name = \"\") +\n  scale_color_manual(\"\", \n                     breaks = c(\"pred0\", \"pred\"),\n                     values = c(nord7, nord10),\n                     labels = c(\"fixed effects only\\n(population fit)\",\n                                   \"fixed and random effects\\n(patient specific fit)\")\n  ) +\n  coord_cartesian(xlim = c(-0.5, 9)*365.25)\n\n```\n\n::::{.r-stack}\n```{r}\np0 + \n  geom_point() +\n  geom_line(aes(y = value, linetype = variable, color = variable),\n            lwd = 1, alpha = 0) +\n  theme(legend.text = element_text(color = \"transparent\"))\n```\n\n:::{.fragment}\n```{r}\np0 + \n  geom_point(alpha = 0.7) +\n  geom_line(data = ~subset(., variable == \"pred0\"),\n            aes(y = value, linetype = variable, color = variable),\n            lwd = 1)\n```\n:::\n:::{.fragment}\n```{r}\np0 + \n  geom_point(alpha = 0.7) +\n  geom_line(aes(y = value, linetype = variable, color = variable),\n            lwd = 1)\n```\n:::\n\n::::\n\n\n## Mixed Models Visualized\n\n```{r}\np0 + \n  geom_segment(data = rd[c(1, 3), ], color = nord11,\n               aes(x = 0, xend = 0,\n                   y = beta0, yend =`(Intercept)` + beta0),\n               arrow = arrow(length = unit(5, \"pt\"),\n                             type = \"closed\", ends = \"last\")) +\n  geom_curve(data = subset(rd, pred > pred0),\n             aes(x = day, y = pred0, xend = day, yend = pred),\n             curvature = 0.25, color = nord11,\n             arrow = arrow(length = unit(5, \"pt\"), type = \"closed\", ends = \"last\")) +\n  geom_curve(data = subset(rd, pred <= pred0),\n             aes(x = day, y = pred0, xend = day, yend = pred),\n             curvature = -0.25, color = nord11,\n             arrow = arrow(length = unit(5, \"pt\"),\n                           type = \"closed\", ends = \"last\")) +\n  geom_point(alpha = 0.1) + \n  geom_line(aes(y = value, linetype = variable, color = variable),\n            lwd = 1, alpha = 0.5) +\n  geom_text(data = rd, aes(x = 0, y = ypos), label = expression(b[0]),\n            hjust = 1.2, color = nord11) +\n  geom_text(data = rd, aes(x = xpos, y = (pred + pred0)/2), label = expression(b[1]),\n            hjust = 1, color = nord11)\n\n```\n\n\n\n\n## Example: Non-linear Trajectories\n\n```{r pbc-example-setup}\n#| cache: true\n\ndat <- JointAI::PBC\ndat$time <- dat$day/365.25\ndat$futime <- dat$futime/365.25\ndat$stage <- factor(dat$stage, ordered = FALSE)\ndat$ALP <- dat$alk.phos/1000\n\nlibrary(\"splines\")\n\nfit0 <- lmer(log(bili) ~ ns(time, df = 5, B = c(0, 11)) +\n               (ns(time, df = 5, B = c(0, 11)) | id),\n             data = dat, control = lmerControl(optimizer = \"bobyqa\"))\n\n\n\n# ids to show different patient-specific fit\nids <- c(15, 134, 93, 116, 180, 114)\n\nndf <- expand.grid(time = seq(0, 12, length = 80),\n                   id = ids)\nndf$pred_f <- predict(fit0, newdata = ndf, re.form = ~ 0)\nndf$pred_rd <- predict(fit0, newdata = ndf, re.form = NULL)\n\n```\n\n\n```{r bili-fit-fixed}\nsubset(dat, id %in% ids) %>%\n  ggplot(aes(x = time, y = log(bili))) +\n  geom_point(alpha = 0.5) +\n  facet_wrap(\"id\", labeller = as_labeller(function(x) \n    paste0(\"patient \", x))) +\n  xlab(\"time\") +\n  ylab(\"response, y\") +\n  scale_color_manual(\n    \"\",\n    values = c(nord7, nord10),\n    breaks = c(\"pred_f\", \"pred_rd\"),\n    labels = c(\"fixed effects only\\n(population fit)\",\n               \"fixed and random effects\\n(patient specific fit)\")\n  ) +\n  scale_linetype_manual(\n    labels = c(\"fixed effects only\\n(population fit)\",\n               \"fixed and random effects\\n(patient specific fit)\"),\n    breaks = c(\"pred_f\", \"pred_rd\"),\n    values = c(2, 1),\n    name = \"\") +\n  theme(legend.position = \"top\",\n        # legend.box.spacing = unit(1, units = \"pt\"),\n        # legend.margin = margin(0, 0, 0, 0),\n        axis.text = element_blank(),\n        axis.ticks = element_blank()) +\n  geom_line(data = ndf, aes(y = pred_f, x = time, linetype = 'pred_f',\n                            color = 'pred_f'),\n            linewidth = 1) +\n  geom_line(data = ndf, aes(y = pred_rd, x = time,\n                            linetype = 'pred_rd', color = 'pred_rd'),\n            linewidth = 1)\n\n```\n\n\n# Big Data {background-image=\"images/galaxy.jpg\" background-size=\"fill\" background-color=\"black\" .center .bigdata}\n\n<!-- ## Big Data -->\n\n<!-- <br> -->\n<!-- <br> -->\n\n<!-- > Your data are not large if using the naive [...] approach takes less time than -->\n<!--   finding and reading the documentation that describes how to do what you want -->\n<!--   to do efficiently. -->\n\n<!-- :::{.quoteauthor} -->\n<!-- **Douglas Bates**, author of the **lme4** R-package -->\n<!-- ::: -->\n\n## Scenario 1: Many Clusters (i.e., many patients)\n\n```{r}\nparr = ggplot() +\n  annotate(\"segment\", x = 0, xend = 0, y = 0, yend = 10, color = nord11,\n           linewidth = 1,\n           arrow = arrow(length = unit(5, \"pt\"),\n                 type = \"closed\", ends = \"both\")) +\n  theme_void()\n\nggsave(filename = \"images/arrow.png\", plot = parr, width = 100, height = 500, \n       bg = \"transparent\", units = \"px\")\n\ntemp = select(tdat, !matches(\"setting\"))\ntemp$id = as.character(temp$id)\ntemp$id[7] = \"\\\\(\\\\vdots\\\\)\"\ntemp$id[c(8, 9)] = \"N\"\n\n```\n\n::::{.columns}\n:::{.column width=\"30%\"}\n\n<br>\n<br>\n**Example:**<br>\nlarge longitudinal study\n:::\n\n:::{.column width=\"70%\"}\n\n<br>\n\n```{r}\nkable(temp, digits = 1, escape = FALSE, format = \"html\", \n      table.attr = \"class='datatab-scen'\")\n```\n<img src=\"images/arrow.png\" id = arrow1>\n:::\n::::\n\n\n\n## Scenario 2: Many Repeated Measurements\n\n```{r}\ntemp = select(tdat, !matches(\"setting\"))\ntemp$id = as.character(temp$id)\ntemp$id[c(2, 5, 9)] = \"\\\\(\\\\vdots\\\\)\"\ntemp$id[c(4)] = \"2\"\n\n```\n\n::::{.columns}\n:::{.column width=\"30%\"}\n<br>\n<br>\n\n\n**Example:**\n\n* Data from wearables\n* \"time-series\"\n:::\n\n:::{.column width=\"70%\"}\n\n<br>\n\n```{r}\nkable(temp, digits = 1, escape = FALSE, format = \"html\", \n      table.attr = \"class='datatab-scen'\")\n```\n<img src=\"images/arrow.png\" id = arrow2a>\n<img src=\"images/arrow.png\" id = arrow2b>\n<img src=\"images/arrow.png\" id = arrow2c>\n:::\n::::\n\n\n## Scenario 3: Many Covariates\n\n```{r}\ntemp = select(tdat[-nrow(tdat), ], !matches(\"setting\"))\ntemp$`\\\\(x_4\\\\)` = \"\\\\(\\\\ldots\\\\)\"\nfor (i in 1:3) {\n  temp = cbind(temp, data.frame(`...` = \"\\\\(\\\\ldots\\\\)\"))\n}\ntemp$`\\\\(x_p\\\\)` = \"\\\\(\\\\vdots\\\\)\"\n\n```\n\n::::{.columns}\n:::{.column width=\"25%\"}\n\n\n<br>\n<br>\n\n**Example:**<br>\ngenetic markers\n:::\n\n:::{.column width=\"75%\"}\n\n<br>\n\n```{r}\nkable(temp, digits = 1, escape = FALSE, format = \"html\", \n      table.attr = \"class='datatab-scen'\")\n```\n<img src=\"images/arrow.png\" id = arrow3>\n:::\n::::\n\n\n\n## Scenario 4: Many Outcomes\n\n```{r}\ntemp = select(tdat, id, y) %>%\n  rename(\"\\\\(y_1\\\\)\" = \"y\")\ntemp$`\\\\(y_2\\\\)` = \"\\\\(\\\\ldots\\\\)\"\ntemp$`\\\\(y_3\\\\)` = \"\\\\(\\\\ldots\\\\)\"\n\nfor (i in 1:2) {\n  temp = cbind(temp, data.frame(`...` = \"\\\\(\\\\ldots\\\\)\"))\n}\n\ntemp$`\\\\(y_K\\\\)` = \"\\\\(\\\\ldots\\\\)\"\n\ntemp = cbind(temp, select(tdat, time, `\\\\(x_1\\\\)`, `\\\\(x_2\\\\)`, `\\\\(x_3\\\\)`))\n\n```\n\n::::{.columns}\n:::{.column width=\"35%\"}\n<br>\n<br>\n\n\n**Example:**<br>\nRepeated imaging/omics data\n:::\n\n:::{.column width=\"65%\"}\n\n<br>\n\n```{r}\nkable(temp, digits = 1, escape = FALSE, format = \"html\", \n      table.attr = \"class='datatab-scen'\")\n```\n<img src=\"images/arrow.png\" id = arrow4>\n:::\n::::\n\n## My Data: Continuous Monitoring\n\n::::{.columns}\n\n:::{.column width=\"45%\"}\n\n<br>\n\n* N = 916 patients (for now...)\n* follow-up: 1 hr - 27 days\n* measurements every 20 seconds\n  * 180 obs./hour &#8680; 4320 obs./day\n\n&#8680; 9.3 million rows\n\n:::{.fragment}\n<br>\n\n* 6 outcomes of interest\n:::\n\n:::{.fragment}\n[ &#8680; **Scenario 2** with additional challenges]{.red}\n:::\n\n:::\n\n:::{.column width=\"55%\"}\n\n```{r}\n#| eval: false\n\ndatadir <- \"/Volumes/Onderzoek_Acute_Geneekunde/22-846_COVERED_C2W/C_PersonalData/1_SourceData\"\nload(file.path(datadir, \"Files_Nicole_Erler\", \"dat_clean_2024-11-20.RData\"))\n\nsdat = subset(dat, id == 1111)\n\nsdat %>%\n  ggplot(aes(x = mtime, y = hr)) +\n  geom_point(size = 0.1) +\n  scale_x_continuous(\"follow-up time (hours)\", breaks = seq(0, 120, 24)) +\n  scale_y_continuous(\"heart rate\")\n\nggsave(\"images/hr_example_1p.png\", width = 6, height = 5, dpi = 600,\n       bg = \"transparent\", scale = 0.8)\n```\n\n<img src=\"images/hr_example_1p.png\" id = \"hr\">\n:::\n::::\n\n\n# Scalability {.center .middle}\n\n## Scenario 1 & 2: Number of Observations\n\n:::{style=\"font-size: 1.4rem;\"}\n$$y_{ij} = \\beta_0  + \\beta_1 t_{ij} + b_{i0} + b_{i1} t_{ij} + \\varepsilon_{ij},\n\\quad i = 1,\\ldots, \\bbox[#516682, 6px]{N}, \\quad j = 1,\\ldots, \\bbox[#906E8A, 6px]{J}$$\n:::\n\n\n```{r}\n#| fig-align: center\n#| class: fragment\n#| fig-height: 3\n\ntimes_N = read.csv(\"runtimes/lmer_times_N.csv\")\ntimes_J = read.csv(\"runtimes/lmer_times_J.csv\")\n\nrbind(\n  mutate(times_N, set = \"N varying (J = 5 obs. per patient)\"),\n  mutate(times_J, set = \"J varying (N = 1000 patients)\")\n) %>%\n  ggplot(aes(x = N * J, y = sec, color = set)) +\n  geom_point(alpha = 0.5) +\n  geom_smooth(method = \"lm\", se = FALSE, formula = \"y ~ poly(x, 2)\") +\n  scale_x_continuous(expression(number~of~observations~(N %*% J)),\n                     breaks = seq(0, 10e6, 1e6),\n                     labels = \\(x) paste0(sprintf(\"%.1f\", x / 1e6), \" mil\")) +\n  scale_y_continuous(\"computation time (seconds)\", \n                     breaks = seq(0, 300, 30)) +\n  scale_color_manual(\"\", values = c(nord15, nord10)) +\n  annotate(\"text\", x = 9e6, y = 0, label = \"N = 1.8 mil\\nJ = 9000\", size = 3,\n           color = grey(0.4), vjust = 0) +\n  theme(legend.position = \"inside\",\n        legend.position.inside = c(0.2, 0.9))\n```\n\n## Scenario 1 & 2: Number of Observations\n\n:::{style=\"font-size: 1.4rem;\"}\n$$y_{ij} = \\beta_0  + \\beta_1 t_{ij} + b_{i0} + b_{i1} t_{ij} + \\varepsilon_{ij},\n\\quad i = 1,\\ldots, \\bbox[#516682, 6px]{N}, \\quad j = 1,\\ldots, \\bbox[#906E8A, 6px]{J}$$\n:::\n\n\n::::{.columns}\n:::{.column width=\"50%\"}\n\n```{r}\n\nfmt = function(x) {\n  ifelse(x >= 1e6, \n         paste0(sprintf(\"%.1f\", x/1e6),  \" mil\"),\n         format(x, big.mark = \" \", scientific = FALSE))\n}\n\ndata.frame(N = c(1000, 10000, 100000, 1e6, 10e6),\n           J = 5) %>%\n  mutate(#\"# obs\" = fmt(N * J),\n         \"\\\\(\\\\# \\\\boldsymbol\\\\beta\\\\)\" = 2,\n         \"\\\\(\\\\# \\\\sigma\\\\)\" = 1,\n         \"\\\\(\\\\# \\\\mathbf D\\\\)\" = 3,\n         \"\\\\(\\\\# \\\\mathbf b\\\\)\" = fmt(2*N),\n         N = fmt(N)) %>%\n  kable(format = \"html\", table.attr = \"class='datatab'\") %>%\n  add_header_above(c(\"data\" = 2, \"parameters\" = 4)) %>%\n  column_spec(1, background = darken(nord10, 0.2)) %>%\n  column_spec(6, color = darken(nord10, 0.3))\n           \n```\n\n:::\n\n:::{.column width=\"50%\"}\n\n```{r}\ndata.frame(N = 1000,\n           J = c(5, 10, 100, 1000, 10000)) %>%\n  mutate(#\"# obs\" = fmt(N * J),\n         \"\\\\(\\\\# \\\\boldsymbol\\\\beta\\\\)\" = 2,\n         \"\\\\(\\\\# \\\\sigma\\\\)\" = 1,\n         \"\\\\(\\\\# \\\\mathbf D\\\\)\" = 3,\n         \"\\\\(\\\\# \\\\mathbf b\\\\)\" = fmt(2*N),\n         N = fmt(N)) %>%\n  kable(format = \"html\", table.attr = \"class='datatab'\") %>%\n  column_spec(2, background = darken(nord15, 0.2)) %>%\n  add_header_above(c(\"data\" = 2, \"parameters\" = 4))\n           \n```\n\n:::\n::::\n\n<br>\n\n```{r}\n#| fig-width: 7\n#| fig-height: 2\n#| fig-align: center\n\n\nrbind(\n  data.frame(N = seq(0, 2e6, 1e5),\n             J = 5,\n             sig = 1,\n             beta = 2,\n             rd = 2,\n             varying = \"N\"),\n  data.frame(N = 1000,\n             J = c(1, 10, 50, 100, 10000),\n             sig = 1,\n             beta = 2,\n             rd = 2,\n             varying = \"J\") \n) %>%\n  mutate(nobs = N * J,\n         b = N * rd,\n         d = (rd^2 + rd)/2,\n         pars = sig + beta + b + d) %>%\n  ggplot(aes(x = nobs, y = pars, color = varying)) +\n  geom_line() +\n  scale_x_continuous(expression(number~of~observations~(N %*% J)),\n                     breaks = seq(0, 10e6, 1e6),\n                     labels = \\(x) paste0(sprintf(\"%.1f\", x / 1e6), \" mil\")) +\n  scale_y_continuous(\"number of\\n parameters\",\n                     breaks = seq(0, 5e6, 1e6),\n                     labels = \\(x) paste0(sprintf(\"%.1f\", x / 1e6), \" mil\")) +\n  coord_fixed() +\n  scale_color_manual(\"varying:\", values = c(nord10, nord15), breaks = c(\"N\", \"J\")) +\n  theme(axis.text.x = element_text(size = 6))\n```\n\n\n\n\n## Parameter Estimation in the (Linear) Mixed Model\n\nConditional formulation, given the [unobserved random effects $\\mathbf b_i$]{.blue .strong}:\n\n$$\\mathbf y_i \\color{var(--nord10)}{\\mid \\mathbf b_i} \\sim N\\left(\\mathbf X_i \\boldsymbol\\beta \\color{var(--nord10)}{+ \\mathbf Z_i\\mathbf b_i},\\; \\sigma^2 \\mathbf I\\right)$$\n**Integrating** over the random effects...\n$$f(\\mathbf y_i) = \\color{var(--nord11)}{\\int} f(\\mathbf y_i \\mid \\mathbf b_i)\\; f(\\mathbf b_i) \\; \\color{var(--nord11)}{d\\mathbf b_i}$$\n...results in the **marginal model**:\n$$\\mathbf y_i \\sim N(\\mathbf X_i \\boldsymbol\\beta,\\; \\color{var(--nord14)}{\\mathbf Z_i \\mathbf D \\mathbf Z_i^\\top} + \\sigma^2 \\mathbf I)$$\n\n:::{.fragment}\n\n:::{style=\"text-align: center;\"}\n[{{< fa regular smile >}}]{.green} fewer parameters to estimate\n&emsp;&emsp;\n[{{< fa regular frown >}}]{.red} integration\n:::\n:::\n\n\n\n\n## Scenario 3: Covariate Terms\n\n$$y_{ij} = \\beta_0 + \\bbox[#516682, 8px]{\\beta_1 t_{ij} + \\beta_2 x_{ij1} + \\ldots + \\beta_p x_{ijp}} +\nb_{i0} + b_{i1} t_{ij} + \\varepsilon_{ij}, \\quad {\\scriptsize\\begin{array}{l}i = 1,\\ldots, 2000\\\\j = 1,\\ldots, 10\\end{array}}$$\n\n```{r}\n#| fig.height: 3.5\n#| fig.width: 7\n\ntimes_p = read.csv(\"runtimes/lmer_times_p.csv\")\n\nggplot(times_p, aes(x = p, y = sec)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE, formula = \"y ~ poly(x, 2)\",\n              color = nord10) +\n  scale_x_continuous(\"number of fixed effects\",\n                     breaks = seq(0, 1000, 100)) +\n  scale_y_continuous(\"computation time (seconds)\",\n                     breaks = seq(0, 300, 30)) +\n  scale_color_viridis_d(\"\", end = 0.6) +\n  theme(legend.position = \"top\")\n```\n\n\n\n## Scenario 3: Covariate Terms\n\n$$y_{ij} = \\beta_0 + \\bbox[#516682, 8px]{\\beta_1 t_{ij} + \\beta_2 x_{ij1} + \\ldots + \\beta_p x_{ijp}} +\nb_{i0} + b_{i1} t_{ij} + \\varepsilon_{ij}, \\quad {\\scriptsize\\begin{array}{l}i = 1,\\ldots, 2000\\\\j = 1,\\ldots, 10\\end{array}}$$\n\n::::{.columns}\n:::{.column width=\"50%\"}\n```{r}\ndata.frame(N = 2000,\n           J = 10,\n           \"\\\\(\\\\# \\\\boldsymbol\\\\beta\\\\)\" = c(1, 10, 100, 1000),\n           check.names = FALSE) %>%\n  mutate(\"# obs\" = fmt(N * J),\n         \"\\\\(\\\\# \\\\sigma\\\\)\" = 1,\n         \"\\\\(\\\\# \\\\mathbf D\\\\)\" = 3,\n         \"\\\\(\\\\# \\\\mathbf b\\\\)\" = fmt(2*N),\n         N = fmt(N)) %>%\n  select(N, J, `# obs`, everything()) %>%\n  kable(format = \"html\", table.attr = \"class='datatab'\") %>%\n  add_header_above(c(\"data\" = 3, \"parameters\" = 4)) %>%\n  column_spec(4, background = darken(nord10, 0.2))\n\n           \n```\n\n:::\n\n:::{.column width=\"50%\"}\n\n```{r}\n#| fig-width: 4.5\n#| fig-height: 4.5\n#| out-width: 80%\n\ndata.frame(N = 2000,\n           J = 10,\n           sig = 1,\n           rd = 2,\n           beta = seq(0, 1000, 50)) %>%\n  mutate(nobs = N * J,\n         b = N * rd,\n         d = (rd^2 + rd)/2,\n         pars = sig + beta + b + d) %>%\n  ggplot(aes(x = beta, y = pars)) +\n  geom_line(color = nord10) +\n  scale_x_continuous(\"number of covariate terms\",\n                     breaks = seq(0, 1000, 100)) +\n  scale_y_continuous(\"number of parameters\",\n                     breaks = seq(0, 1e5, 100)) +\n  coord_fixed()\n```\n\n:::\n::::\n\n\n\n## Scenario 4: Number of Outcome Variables\n\n$$\n\\begin{array}{ccl}\ny_{ij\\color{var(--nord11)}{1}} &=&\\beta_{0\\color{var(--nord11)}{1}} + \\beta_{1\\color{var(--nord11)}{1}} t_{ij\\color{var(--nord11)}{1}}  + b_{i0\\color{var(--nord11)}{1}} + b_{i1\\color{var(--nord11)}{1}} t_{ij\\color{var(--nord11)}{1}} + \\varepsilon_{ij\\color{var(--nord11)}{1}}\\\\\n\\vdots & \\vdots & \\vdots\\\\\ny_{ij\\color{var(--nord11)}{K}} &=&\\beta_{0\\color{var(--nord11)}{K}} + \\beta_{1\\color{var(--nord11)}{K}} t_{ij\\color{var(--nord11)}{K}}  + b_{i0\\color{var(--nord11)}{K}} + b_{i1\\color{var(--nord11)}{K}} t_{ij\\color{var(--nord11)}{K}} + \\varepsilon_{ij\\color{var(--nord11)}{K}}\n\\end{array} \\quad {\\scriptsize\\begin{array}{l}i = 1,\\ldots, N\\\\j = 1,\\ldots, J\\\\\\bbox[#BF616A, 2pt]{k = 1, \\ldots, K}\\end{array}}\n$$\n\nwith\n\n$$\\mathbf b_i = \\begin{pmatrix} b_{i0\\color{var(--nord11)}{1}} \\\\ \n  b_{i1\\color{var(--nord11)}{1}}\\\\ \\vdots \\\\ b_{i0\\color{var(--nord11)}{K}} \\\\\n  b_{i1\\color{var(--nord11)}{K}} \\end{pmatrix} \\sim N(\\mathbf 0, \\mathbf D)\n\\qquad \\text{and}\\qquad\n\\varepsilon_{ij\\color{var(--nord11)}{k}} \\sim N(0, \\sigma_\\color{var(--nord11)}{k}^2 \\mathbf I)$$\n\n\n## Scenario 4: Number of Outcome Variables\n\n\n::::{.columns}\n:::{.column width=\"50%\"}\n\n<br>\n\nFor the intercept & slope model:\n```{r}\ndata.frame(N = 1000,\n           J = 10000,\n           K = c(1, 2, 3, 4, 5, 10, 100, 1000, 5000),\n           check.names = FALSE) %>%\n  mutate(#\"# obs\" = fmt(N * J * K),\n        \"\\\\(\\\\# \\\\boldsymbol\\\\beta\\\\)\" = 2 * K,\n         \"\\\\(\\\\# \\\\sigma\\\\)\" = K,\n         \"\\\\(\\\\# \\\\mathbf D\\\\)\" = fmt(((2*K)^2 + (2*K))/2),\n         \"\\\\(\\\\# \\\\mathbf b\\\\)\" = fmt(2 * N * K),\n         N = fmt(N),\n        J = fmt(J)) %>%\n  select(N, J, K, everything()) %>%\n  kable(format = \"html\", table.attr = \"class='datatab'\") %>%\n  add_header_above(c(\"data\" = 3, \"parameters\" = 4)) %>%\n  column_spec(3, background = darken(nord11, 0.2)) %>%\n  column_spec(6, color = lighten(nord11, 0.15))\n\n```\n\n:::\n\n:::{.column width=\"50%\"}\n\n<br>\n\n```{r}\n#| fig-width: 5\n#| fig-height: 4.5\n#| out-width: 90%\n\ndata.frame(N = 1000,\n           J = 10000,\n           K = c(seq(1, 900, 100), seq(1000, 5000, 100))\n) %>%\n  mutate(nobs = N * J * K,\n         sig = K,\n         rd = 2 * K,\n         beta = rd,\n         b = N * rd,\n         d = (rd^2 + rd)/2,\n         pars = sig + beta + b + d,\n         marg = sig + beta + d) %>%\n  ggplot(aes(x = K, y = pars)) +\n  geom_line(color = nord11) +\n  geom_line(aes(y = marg), color = nord4, linetype = 2) +\n  scale_x_continuous(\"number of outcome variables\",\n                     breaks = seq(0, 10000, 500)) +\n  scale_y_continuous(\"number of parameters\",\n                     breaks = seq(0, 1e8, 1e7),\n                     labels = fmt) +\n  annotate(\"label\", x = 3500, y = 50e6, label = \"all parameters\\n(incl. b)\",\n           alpha = 0.1, color = nord11, label.size = 0, label.padding = unit(0.25, \"lines\"),\n           size = 3.5) +\n  annotate(\"label\", x = 4500, y = 20e6, label = \"in marg. model\\n(without b)\",\n           alpha = 0.1, color = nord4, label.size = 0, label.padding = unit(0.25, \"lines\"),\n           size = 3.5)\n```\n\n:::\n::::\n\n\n\n## Scenario 5 (!): Random Effect Terms\n\n$$y_{ij} = \\beta_0  + \\beta_1 t_{ij} + \\ldots + \\beta_p t_{ij}^p +\n\\bbox[#906E8A, 8px]{b_{i0} + b_{i1} t_{ij} + \\ldots + b_{ip} t_{ij}^p} + \n\\varepsilon_{ij}, \\quad {\\scriptsize\\begin{array}{l}i = 1,\\ldots, 50\\\\j = 1,\\ldots, 100\\end{array}}$$\n\n\n```{r}\n#| fig.height: 3.5\n#| fig.width: 7\n\ntimes_rd = read.csv(\"runtimes/lmer_times_rd.csv\")\n\nsubset(times_rd, N == 50) %>%\n  ggplot(aes(x = nrd, y = sec)) +\n  geom_point(alpha = 0.7) +\n  geom_smooth(method = \"lm\", se = FALSE, formula = \"y ~ poly(x, 3)\", color = nord15) +\n  scale_x_continuous(\"number of random effects\",\n                     breaks = seq(0, 20, 2)) +\n  scale_y_continuous(\"computation time (seconds)\",\n                     breaks = seq(0, 300, 30)) +\n  theme(legend.position = \"inside\",\n        legend.position.inside = c(0.2, 0.9))\n```\n\n\n\n\n\n\n## Scenario 5 (!): Random Effect Terms\n\n$$y_{ij} = \\beta_0  + \\beta_1 t_{ij} + \\ldots + \\beta_p t_{ij}^p +\n\\bbox[#906E8A, 8px]{b_{i0} + b_{i1} t_{ij} + \\ldots b_{ip} t_{ij}^p} + \n\\varepsilon_{ij}, \\quad {\\scriptsize\\begin{array}{l}i = 1,\\ldots, N\\\\j = 1,\\ldots, J\\end{array}}$$\n\n::::{.columns}\n:::{.column width=\"50%\"}\n```{r}\ndata.frame(N = 50,\n           J = 100,\n           \"# rd. effect terms\" = c(1, 2, 3, 4, 5, 10, 50, 100),\n           \"\\\\(\\\\# \\\\boldsymbol\\\\beta\\\\)\" = c(1, 2, 3, 4, 5, 10, 50, 100),\n           check.names = FALSE) %>%\n  mutate(#\"# obs\" = N * J,\n         \"\\\\(\\\\# \\\\sigma\\\\)\" = 1,\n         \"\\\\(\\\\# \\\\mathbf D\\\\)\" = (`# rd. effect terms`^2 + `# rd. effect terms`)/2,\n         \"\\\\(\\\\# \\\\mathbf b\\\\)\" = N * `# rd. effect terms`) %>%\n  select(N, J, everything()) %>%\n  kable(format = \"html\", table.attr = \"class='datatab'\") %>%\n  add_header_above(c(\"data\" = 2, \" \" = 1, \"parameters\" = 4)) %>%\n  column_spec(4, background = darken(nord15, 0.2)) %>%\n  column_spec(6:7, color = lighten(nord15, 0.15))\n           \n```\n\n:::\n\n:::{.column width=\"50%\"}\n\n```{r}\npl0 <- data.frame(\n  N = 10,\n  J = 10000,\n  sig = 1,\n  beta = 2,\n  rd = c(1:100)) %>%\n  mutate(\n    obs = N * J,\n    b = N * rd,\n    d = (rd^2 + rd)/2,\n    pars = sig + beta + b + d\n  ) %>%\n  ggplot(aes(x = rd, y = pars)) +\n  geom_line(color = nord15) +\n  scale_x_continuous(\"number of\\nrandom\\neffects\\nterms\",\n                     breaks = seq(0, 15, 15)) +\n  scale_y_continuous(\"number of parameters\",\n                     breaks = seq(0, 1e5, 1e3))\n\n```\n\n```{r}\n#| fig-width: 4.5\n#| fig-height: 4\n#| fig-align: center\n#| out-width: 85%\n\npl0 +\n    # coord_fixed(ratio = 0.002) +\n    scale_x_continuous(\"number of random effects terms\",\n                       breaks = seq(0, 250, 20))\n\n```\n:::\n::::\n\n\n## Conclusion\n\n<br>\n\n**Scenario 1 & 2: Many clusters/patients or many repeated measurements**\n\n* LMM probably feasible\n* for extreme $N$: split the data, fit models in parallel, combine\n* for extreme $J$: splitting possible, but combining maybe more complex\n\n<br>\n\n:::{.fragment}\n**Scenario 3: Many covariates**\n\n* LMM probably feasible\n* regularization (e.g., ridge, lasso) may be a good idea\n\n:::\n\n## Conclusion\n\n<br>\n\n**Scenario 4: Many outcome variables**\n\n* Potentially serious challenges!\n* LMM feasible for small $K$ and few random effects terms\n* **Software**: more limited, typically Bayesian (cond. model)\n\n:::{.fragment}\nAlternatives to the full multivariate model:\n\n* stacking the data & use interaction with outcome indicator\n* pairwise approach\n* simplify the structure of $\\mathbf D$ (e.g., diagonal)\n\n:::\n\n## Stacking the Data\n\n```{r}\n\ntemp = data.frame(\n  id = c(1, \"\\\\(\\\\vdots\\\\)\", 1, 1, \"\\\\(\\\\vdots\\\\)\", 1, 2,\"\\\\(\\\\vdots\\\\)\"),\n  \"\\\\(\\\\color{var(--nord11)}{k}\\\\)\" = c(rep(paste0(\"y\", 1:2), each = 3), \"y1\", \"y1\"),\n  time = c(0, \"\\\\(\\\\vdots\\\\)\", 9.3, 0, \"\\\\(\\\\vdots\\\\)\", 7.8, 0, \"\\\\(\\\\vdots\\\\)\"),\n  check.names = FALSE\n)\n\n\n```\n\n::::{.columns}\n:::{.column width=\"60%\"}\nInteraction with an indicator variable:\n<br>\n$$\n\\begin{align} y_{ij} = & (\\beta_0 + b_{i01}) + (\\beta_1 + b_{i11}) t_{ij} \\\\\n& + (\\beta_2  + b_{i02})\\ I(\\color{var(--nord11)}{k = 2}) + \n (\\beta_3  + b_{i12})\\ I(\\color{var(--nord11)}{k = 2})t_{ij}\\\\\n  & + \\ldots +\\\\\n&  + (\\beta_{p-1}  + b_{i0K})\\ I(\\color{var(--nord11)}{k = K})  + \n (\\beta_p + b_{i1K})\\ I(\\color{var(--nord11)}{k = K}) t_{ij}\\\\\n& + \\varepsilon_{ij}\n\\end{align}\n$$\n\n&#8680; specify weights to accommodate $\\sigma_\\color{var(--nord11)}{1}, \\ldots, \\sigma_\\color{var(--nord11)}{K}$\n:::\n\n:::{.column width=\"40%\"}\n\n```{r}\nkable(temp, digits = 1, escape = FALSE, format = \"html\", \n      table.attr = \"class='datatab-scen'\") %>%\n  row_spec(4:6, background = lighten(theme_bg, 0.02))\n```\n:::\n::::\n\n:::{.fragment}\n::::{.columns}\n:::{.column width=\"50%\"}\n[{{< fa regular smile >}}]{.green} standard LMM software<br>\n[{{< fa regular smile >}}]{.green} works for unbalanced data\n:::\n\n:::{.column width=\"50%\"}\n[{{< fa regular frown >}}]{.red} only for outcomes of the same type\n:::\n::::\n\n:::\n\n## Pairwise approach\n\nFit models for all pairs of outcomes:\n$$(y_1, y_2), (y_1, y_3), (y_2, y_3), \\ldots, (y_{K-1}, y_K)$$\n\n* average parameters estimated in multiple models\n  e.g., $\\beta_{11}$ is estimated in $(y_1, y_2)$, $(y_1, y_3)$, ...\n  \n* Pairwise models can be run in parallel.\n* Doesn't work in joint models.\n\n\n## Conclusion\n\n<br>\n\n**Scenario 5: Random Effect Terms**\n\n* feasible for moderate number of random effects terms (e.g., &le; 10) and \n  sample size (e.g., N = 1000)\n* larger models/data may require simplification of $\\mathbf D$\n\n\n\n```{r}\n\ndata.frame(N = 1000,\n           J = 10000,\n           K = c(5, 6),\n           check.names = FALSE) %>%\n  mutate(\"# obs\" = fmt(N * J * K),\n         rd = 10,\n        \"\\\\(\\\\# \\\\boldsymbol\\\\beta\\\\)\" = rd * K,\n         \"\\\\(\\\\# \\\\sigma\\\\)\" = K,\n         \"\\\\(\\\\# \\\\mathbf D\\\\)\" = fmt(((rd*K)^2 + (rd*K))/2),\n         \"\\\\(\\\\# \\\\mathbf b\\\\)\" = fmt(rd * N * K),\n         N = fmt(N)) %>%\n  select(N, J, K, `# obs`, everything()) %>%\n  kable(format = \"html\", table.attr = \"class='datatab'\") %>%\n  add_header_above(c(\"data\" = 4, \" \", \"parameters\" = 4)) %>%\n  column_spec(3, background = darken(nord11, 0.2)) %>%\n  column_spec(8, color = lighten(nord11, 0.15))\n\n```\n\n\n\n# More Challenges!\n\n\n## Estimation of the Random Effects\n\n**Empirical Bayes** estimate:\n\n$$\\mathbf{\\hat b}_i = \\widehat{\\mathbf D} \\mathbf Z_i^\\top \\left(\\mathbf Z_i \\mathbf{\\widehat D} \\mathbf Z_i^\\top + \\sigma^2 \\mathbf I\\right)^{-1} (\\mathbf y_i - \\mathbf x_i^\\top \\boldsymbol{\\hat\\beta})$$\n\n* $\\widehat{\\mathbf D}$ is a $10 \\times 10$ matrix\n* $\\mathbf Z_i$ is a $10\\ 000 \\times 10$ matrix\n\n&#8680; $\\mathbf Z_i \\mathbf{\\widehat D} \\mathbf Z_i^\\top$ is $10\\ 000 \\times 10\\ 000$ (or larger)\n\n\n## Matrix Inversion\n\n```{r}\n\nrt_R = read.csv(\"runtimes/runtimes_R.csv\")\nrt_Rch = read.csv(\"runtimes/runtimes_Rc.csv\")\nrt_jl = read.csv(\"runtimes/runtimes_JL.csv\", header = FALSE)\ncolnames(rt_jl) = c(\"n\", \"sec\")\n\ndatt = list(Rsolve = as.data.frame(rt_R),\n            Rchol = as.data.frame(rt_Rch),\n            Julia = rt_jl) %>%\n  reshape2::melt(id.vars = colnames(.[[1]])) %>%\n  dplyr::mutate(nrel = n/1000)\n\nfit_all = lm(sec ~ 0 + I(nrel^3):L1, data = datt)\n\nndf = expand.grid(n = seq(0, 20000, by = 500),\n                  L1 = c(\"Rchol\", \"Rsolve\", \"Julia\")) %>%\n  dplyr::mutate(nrel = n/1000)\n\nndf$sec = predict(fit_all, newdata = ndf)\n\ntp0 <- subset(datt, L1 != \"Julia\") %>%\n  ggplot(aes(x = n, y = sec, color = L1)) +\n  geom_point() +\n  theme(legend.position = \"none\") +\n  scale_color_manual(values = c(nord7, nord10)) +\n  xlab(\"matrix dimension (J)\") +\n  ylab(\"computation time (seconds)\")\n\n```\n\n:::{.r-stack}\n```{r}\ntp0 +\n  geom_line(data = subset(ndf, n <= 5000 & L1 != \"Julia\"), linetype = 2) +\n  geom_label(data = data.frame(n = c(4000, 4500),\n                               sec = c(50, 20), \n                               L1 = c(\"Rsolve\", \"Rchol\"),\n                               method = c(\"solve()\", \"chol2inv(chol())\")),\n             aes(label = method), label.size = 0, alpha = 0.1)\n\n```\n\n```{r}\n#| class: fragment\ntp0 +\n  geom_line(data = subset(ndf, L1 != \"Julia\"), linetype = 2) +\n  geom_label(data = data.frame(n = c(14000, 17000),\n                               sec = c(2500, 1200), \n                               L1 = c(\"Rsolve\", \"Rchol\"),\n                               method = c(\"solve()\", \"chol2inv(chol())\")),\n             aes(label = method), label.size = 0, alpha = 0.1) +\n    scale_y_continuous(expression(computation~time~(bold(minutes))),\n                       labels = \\(x)x/60, seq(0, 10000, 60*10))\n\n```\n\n```{r}\n#| class: fragment\n#| \ntp0 %+% datt +\n  scale_color_manual(values = c(nord15, nord7, nord10)) +\n  geom_line(data = ndf, linetype = 2) +\n  geom_label(data = data.frame(n = c(14000, 17000, 18000),\n                               sec = c(2500, 1200, 5*60), \n                               L1 = c(\"Rsolve\", \"Rchol\", \"Julia\"),\n                               method = c(\"solve()\", \"chol2inv(chol())\", \"Julia\")),\n             aes(label = method), label.size = 0, alpha = 0.1) +\n  scale_y_continuous(expression(computation~time~(bold(minutes))),\n                     labels = \\(x)x/60, seq(0, 10000, 60*10))\n\n```\n:::\n\n\n\n\n\n\n## My Data\n\n```{r}\n#| eval: false\n\ndatadir <- \"/Volumes/Onderzoek_Acute_Geneekunde/22-846_COVERED_C2W/C_PersonalData/1_SourceData\"\nload(file.path(datadir, \"Files_Nicole_Erler\", \"dat_clean_2024-11-20.RData\"))\n\ntest = subset(dat, !is.na(hr)) %>%\n  reframe(.by = \"id\",\n          nobs = length(id))\n\n#ids = subset(test, nobs < 30000 & nobs > 7000)$id\n\nids = c(1111, 1010, 1129, 1299, 1202, 1304)\n\nsdat = subset(dat, !is.na(hr) & id %in% ids & mtime <= 84)\n\nsdat %>%\n  subset(id %in% ids) %>%\n  ggplot(aes(x = mtime, y = hr)) +\n  geom_point(size = 0.1, alpha = 0.3) +\n  facet_wrap(\"id\") +\n  scale_y_continuous(\"heart rate\", breaks = seq(0, 250, 50)) +\n  scale_x_continuous(\"follow-up time (hours)\", breaks = seq(0, 120, 24))\n\nggsave(\"images/hrexample.png\", width = 7, height = 3.5, dpi = 600, scale = 1.2)\n```\n\n<img src=\"images/hrexample.png\" id = \"hr\">\n\n## My Model \n\n```{css}\n:root {\n  --nord15: #B48EAD;\n  --nord10: #5E81AC;\n  --nord8: #88C0D0;\n  --nord11: #BF616A;\n  --nord14: #A3BE8C;\n}\n\n```\n\n\\begin{align*}\ny_{i}(t) = & \\beta_0 + \\color{var(--nord15)}{b_{i0}} + (\\beta_1 + \\color{var(--nord15}{b_{i1}})\\; t \\;+ \\\\\n& (\\beta_2 + \\color{var(--nord15)}{b_{i2}}) \\sin\\left(2\\pi \\frac{t\\bmod 24}{24}\\right) +\n    (\\beta_3 + \\color{var(--nord15)}{b_{i3}}) \\cos\\left(2\\pi \\frac{t\\bmod 24}{24}\\right) +\\\\\n& (\\beta_4 + \\color{var(--nord15)}{b_{i4}}) \\sin\\left(2\\pi \\frac{t\\bmod 24}{12}\\right) + \n  (\\beta_5 + \\color{var(--nord15)}{b_{i5}}) \\cos\\left(2\\pi \\frac{t\\bmod 24}{12}\\right) +\\\\\n& (\\beta_6 + \\color{var(--nord15)}{b_{i6}}) \\;t\\sin\\left(2\\pi \\frac{t\\bmod 24}{24}\\right) + \n  (\\beta_7 + \\color{var(--nord15)}{b_{i7}}) \\;t\\cos\\left(2\\pi \\frac{t\\bmod 24}{24}\\right) +\\\\\n& (\\beta_8 + \\color{var(--nord15)}{b_{i8}}) \\;t\\sin\\left(2\\pi \\frac{t\\bmod 24}{12}\\right) +\n  (\\beta_9 + \\color{var(--nord15)}{b_{i9}}) \\;t\\cos\\left(2\\pi \\frac{t\\bmod 24}{12}\\right) +\\\\\n& \\varepsilon_i(t)\n\\end{align*}\n\n## My Model\n\n```{r}\nvisdat = read.csv(\"images/sincos_viz.csv\")\n\nvisdat |>\n  # subset(id < 30) |>\n  ggplot(aes(x = time, y = y, group = id, color = factor(id))) +\n  geom_line(linewidth = 1) +\n  scale_color_manual(values = c(nord7, nord15, nord10, nord8, nord9)) +\n  scale_x_continuous(\"follow-up time (hours)\", breaks = seq(0, 150, 24)) +\n  scale_y_continuous(\"heart rate\", breaks = seq(-15, 15, 3)) +\n  theme(legend.position = \"none\",\n        axis.text.y = element_blank())\n```\n\n\n\n\n\n\n\n\n\n\n# Thank You{.the-end .center .middle .no-footer}\n"},"formats":{"revealjs":{"identifier":{"display-name":"RevealJS","target-format":"revealjs","base-format":"revealjs"},"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"html-table-processing":"none"},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":{"method":"mathjax","url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.9/MathJax.js?config=TeX-AMS_HTML-full"},"slide-level":2,"to":"revealjs","include-after-body":["styles/title-slide-footer.html"],"embed-resources":false,"output-file":"2025_3AI.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.7.23","auto-stretch":true,"title":"Big Data, Big Problems?","subtitle":"Scalability of Mixed Models for<br>Clustered and Longitudinal Data","author":"Nicole Erler","author-title":"Department of Data Science & Biostatistics","institute":"Julius Center for Health Sciences and Primary Care","date":"13 May 2025","date-format":"long","contact":"[{{< fa solid house-user >}} nerler.com](\"https://nerler.com\") &emsp;&emsp; [{{< fa brands bluesky >}} nerler](https://bsky.app/profile/nerler.bsky.social)&emsp;&emsp; [{{< fa brands github >}} NErler](https://github.com/NErler)","title-slide-attributes":{"data-background-image":"images/wallpaper_blue.jpg","data-background-size":"cover","data-background-opacity":"0.3"},"knitr":{"opts_chunk":{"out.width":"100%","fig.width":7,"fig.height":3.5,"fig.align":"center","dpi":600,"dev.args":{"bg":"transparent"},"fontsize":"2em","slide-number":true}},"template-partials":["styles/title-slide.html"],"center-title-slide":false,"theme":["styles/mytheme.scss","styles/color-theme-nord.scss","styles/custom_styles.scss"],"width":1244,"height":700,"slideNumber":true,"footer":"[{{< fa solid house-user >}} nerler.com](\"https://nerler.com\") &emsp;&emsp;&emsp;&emsp; [{{< fa brands bluesky >}} nerler](https://bsky.app/profile/nerler.bsky.social)&emsp;&emsp;&emsp;&emsp; [{{< fa brands github >}} NErler](https://github.com/NErler)"}}},"projectFormats":[]}